namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2018-06-27T19:45:45Z. .
# TEI Edition: Version 3.2.0. Last updated on
#	10th July 2017, revision 0fcf651
# TEI Edition Location: http://www.tei-c.org/Vault/P5/Version 3.2.0/
#

# [http://creativecommons.org/licenses/by-sa/4.0/] Distributed under a Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) license
OpenArabicPE_macro.paraContent =
  (text
   | OpenArabicPE_model.gLike
   | OpenArabicPE_model.phrase
   | OpenArabicPE_model.inter
   | OpenArabicPE_model.global
   | OpenArabicPE_lg
   | OpenArabicPE_model.lLike)*
OpenArabicPE_macro.limitedContent =
  (text | OpenArabicPE_model.limitedPhrase | OpenArabicPE_model.inter)*
OpenArabicPE_macro.phraseSeq =
  (text
   | OpenArabicPE_model.gLike
   | OpenArabicPE_model.phrase
   | OpenArabicPE_model.global)*
OpenArabicPE_macro.phraseSeq.limited =
  (text | OpenArabicPE_model.limitedPhrase | OpenArabicPE_model.global)*
OpenArabicPE_macro.specialPara =
  (text
   | OpenArabicPE_model.gLike
   | OpenArabicPE_model.phrase
   | OpenArabicPE_model.inter
   | OpenArabicPE_model.divPart
   | OpenArabicPE_model.global)*
OpenArabicPE_macro.xtext = (text | OpenArabicPE_model.gLike)*
OpenArabicPE_att.ascribed.attributes =
  OpenArabicPE_att.ascribed.attribute.who
OpenArabicPE_att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list { xsd:anyURI+ }
  }?
OpenArabicPE_att.canonical.attributes =
  OpenArabicPE_att.canonical.attribute.ref
OpenArabicPE_att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.
  attribute ref {
    list { xsd:anyURI+ }
  }?
OpenArabicPE_att.cReferencing.attributes =
  OpenArabicPE_att.cReferencing.attribute.cRef
OpenArabicPE_att.cReferencing.attribute.cRef =
  
  ## (canonical reference) specifies the destination of the pointer by supplying a canonical reference expressed using the scheme defined in a refsDecl element in the TEI header
  attribute cRef { xsd:string }?
OpenArabicPE_att.datable.w3c.attributes =
  OpenArabicPE_att.datable.w3c.attribute.when,
  OpenArabicPE_att.datable.w3c.attribute.notBefore,
  OpenArabicPE_att.datable.w3c.attribute.notAfter,
  OpenArabicPE_att.datable.w3c.attribute.from,
  OpenArabicPE_att.datable.w3c.attribute.to
OpenArabicPE_att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
OpenArabicPE_att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
OpenArabicPE_att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
OpenArabicPE_att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
OpenArabicPE_att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
sch:pattern [
  id =
    "tei_OpenArabicPE-att.datable.w3c-att-datable-w3c-when-constraint-rule-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@when]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notBefore|@notAfter|@from|@to"
      role = "nonfatal"
      "The @when attribute cannot be used with any other att.datable.w3c attributes."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id =
    "tei_OpenArabicPE-att.datable.w3c-att-datable-w3c-from-constraint-rule-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@from]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notBefore"
      role = "nonfatal"
      "The @from and @notBefore attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id =
    "tei_OpenArabicPE-att.datable.w3c-att-datable-w3c-to-constraint-rule-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@to]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notAfter"
      role = "nonfatal"
      "The @to and @notAfter attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
OpenArabicPE_att.datable.attributes =
  OpenArabicPE_att.datable.w3c.attributes,
  OpenArabicPE_att.datable.custom.attributes,
  OpenArabicPE_att.datable.attribute.calendar
OpenArabicPE_att.datable.attribute.calendar =
  
  ## indicates the system or calendar to which the date represented by the content of this element belongs.
  attribute calendar { xsd:anyURI }?
sch:pattern [
  id =
    "tei_OpenArabicPE-att.datable-calendar-calendar-constraint-rule-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "string-length(.) gt 0"
      "\x{a}" ~
      "@calendar indicates the system or calendar to which the date represented by the content of this element\x{a}" ~
      "belongs, but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
OpenArabicPE_att.divLike.attributes = empty
OpenArabicPE_att.docStatus.attributes =
  OpenArabicPE_att.docStatus.attribute.status
OpenArabicPE_att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ]
  attribute status {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenArabicPE_att.global.responsibility.attributes =
  OpenArabicPE_att.global.responsibility.attribute.resp
OpenArabicPE_att.global.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list { xsd:anyURI+ }
  }?
OpenArabicPE_att.global.rendition.attributes =
  OpenArabicPE_att.global.rendition.attribute.rend,
  OpenArabicPE_att.global.rendition.attribute.style,
  OpenArabicPE_att.global.rendition.attribute.rendition
OpenArabicPE_att.global.rendition.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenArabicPE_att.global.rendition.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
  attribute style { xsd:string }?
OpenArabicPE_att.global.rendition.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the source text.
  attribute rendition {
    list { xsd:anyURI+ }
  }?
OpenArabicPE_att.global.attributes =
  OpenArabicPE_att.global.rendition.attributes,
  OpenArabicPE_att.global.linking.attributes,
  OpenArabicPE_att.global.facs.attributes,
  OpenArabicPE_att.global.change.attributes,
  OpenArabicPE_att.global.responsibility.attributes,
  OpenArabicPE_att.global.attribute.xmlid,
  OpenArabicPE_att.global.attribute.n,
  OpenArabicPE_att.global.attribute.xmllang
OpenArabicPE_att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
OpenArabicPE_att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { xsd:string }?
OpenArabicPE_att.global.attribute.xmllang =
  
  ## (language) indicates the language of the element content using a tag generated according to BCP 47.
  ## Suggested values include: 1] ar; 2] ota; 3] tr; 4] en; 5] fr; 6] de; 7] he; 8] fa; 9] ar-Latn-x-ijmes; 10] ota-Latn-x-ijmes; 11] ota-Latn-TR; 12] fa-Latn-x-ijmes; 13] ar-Latn-EN; 14] ar-Latn-FR; 15] ar-Latn-x-dmg; 16] de-Arab-AR; 17] en-Arab-AR; 18] fr-Arab-AR
  [ a:defaultValue = "ar" ]
  attribute xml:lang {
    
    ## Arabic in Arabic script
    "ar"
    | 
      ## Ottoman in Arabic script
      "ota"
    | 
      ## Modern Turkish
      "tr"
    | 
      ## English
      "en"
    | 
      ## French
      "fr"
    | 
      ## German
      "de"
    | 
      ## Hebrew in Hebrew script
      "he"
    | 
      ## Farsi in Arabic script
      "fa"
    | 
      ## Arabic in Latin script following the IJMES transcription
      "ar-Latn-x-ijmes"
    | 
      ## Ottoman in Latin script following the IJMES transcription
      "ota-Latn-x-ijmes"
    | 
      ## Ottoman in Latin script following common Turkish conventions
      "ota-Latn-TR"
    | 
      ## Farsi in Latin script following the IJMES transcription
      "fa-Latn-x-ijmes"
    | 
      ## Arabic in Latin script following common English conventions
      "ar-Latn-EN"
    | 
      ## Arabic in Latin script following common French conventions
      "ar-Latn-FR"
    | 
      ## Arabic in Latin script following the DMG transcription
      "ar-Latn-x-dmg"
    | 
      ## German transcribed into Arabic script following common Levantine Arabic practices
      "de-Arab-AR"
    | 
      ## English transcribed into Arabic script following common Levantine Arabic practices
      "en-Arab-AR"
    | 
      ## French transcribed into Arabic script following common Levantine Arabic practices
      "fr-Arab-AR"
    | (xsd:language
       | (
          ##
          ""))
  }?
OpenArabicPE_att.internetMedia.attributes =
  OpenArabicPE_att.internetMedia.attribute.mimeType
OpenArabicPE_att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
  attribute mimeType {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenArabicPE_att.media.attributes =
  OpenArabicPE_att.internetMedia.attributes
OpenArabicPE_att.resourced.attributes =
  OpenArabicPE_att.resourced.attribute.url
OpenArabicPE_att.resourced.attribute.url =
  
  ## (uniform resource locator) specifies the URL from which the media concerned may be obtained.
  attribute url { xsd:anyURI }
OpenArabicPE_att.measurement.attributes =
  OpenArabicPE_att.measurement.attribute.unit,
  OpenArabicPE_att.measurement.attribute.quantity,
  OpenArabicPE_att.measurement.attribute.commodity
OpenArabicPE_att.measurement.attribute.unit =
  
  ## indicates the units used for the measurement, usually using the standard symbol for the desired units.
  ## Suggested values include: 1] m(metre) ; 2] kg(kilogram) ; 3] s(second) ; 4] Hz(hertz) ; 5] Pa(pascal) ; 6] Ω(ohm) ; 7] L(litre) ; 8] t(tonne) ; 9] ha(hectare) ; 10] Å(ångström) ; 11] mL(millilitre) ; 12] cm(centimetre) ; 13] dB(decibel) ; 14] kbit(kilobit) ; 15] Kibit(kibibit) ; 16] kB(kilobyte) ; 17] KiB(kibibyte) ; 18] MB(megabyte) ; 19] MiB(mebibyte) 
  attribute unit {
    
    ## (metre) SI base unit of length
    "m"
    | 
      ## (kilogram) SI base unit of mass
      "kg"
    | 
      ## (second) SI base unit of time
      "s"
    | 
      ## (hertz) SI unit of frequency
      "Hz"
    | 
      ## (pascal) SI unit of pressure or stress
      "Pa"
    | 
      ## (ohm) SI unit of electric resistance
      "Ω"
    | 
      ## (litre) 1 dm³
      "L"
    | 
      ## (tonne) 10³ kg
      "t"
    | 
      ## (hectare) 1 hm²
      "ha"
    | 
      ## (ångström) 10⁻¹⁰ m
      "Å"
    | 
      ## (millilitre) 
      "mL"
    | 
      ## (centimetre) 
      "cm"
    | 
      ## (decibel) see remarks, below
      "dB"
    | 
      ## (kilobit) 10³ or 1000 bits
      "kbit"
    | 
      ## (kibibit) 2¹⁰ or 1024 bits
      "Kibit"
    | 
      ## (kilobyte) 10³ or 1000 bytes
      "kB"
    | 
      ## (kibibyte) 2¹⁰ or 1024 bytes
      "KiB"
    | 
      ## (megabyte) 10⁶ or 1 000 000 bytes
      "MB"
    | 
      ## (mebibyte) 2²⁰ or 1 048 576 bytes
      "MiB"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenArabicPE_att.measurement.attribute.quantity =
  
  ## specifies the number of the specified units that comprise the measurement
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
OpenArabicPE_att.measurement.attribute.commodity =
  
  ## indicates the substance that is being measured
  attribute commodity {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenArabicPE_att.naming.attributes =
  OpenArabicPE_att.canonical.attributes,
  OpenArabicPE_att.naming.attribute.nymRef
OpenArabicPE_att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form (nym) of the names associated with the object named by the element bearing it.
  attribute nymRef {
    list { xsd:anyURI+ }
  }?
OpenArabicPE_att.placement.attributes =
  OpenArabicPE_att.placement.attribute.place
OpenArabicPE_att.placement.attribute.place =
  
  ## specifies where this item is placed.
  ## Suggested values include: 1] below; 2] bottom; 3] margin; 4] top; 5] opposite; 6] overleaf; 7] above; 8] end; 9] inline; 10] inspace
  attribute place {
    list {
      (
       ## below the line
       "below"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## at the top of the page
         "top"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ## in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
    }
  }?
OpenArabicPE_att.typed.attributes =
  OpenArabicPE_att.typed.attribute.type,
  OpenArabicPE_att.typed.attribute.subtype
OpenArabicPE_att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient classification scheme or typology.
  attribute type {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenArabicPE_att.typed.attribute.subtype =
  
  ## provides a sub-categorization of the element, if needed
  attribute subtype {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
sch:pattern [
  id = "tei_OpenArabicPE-att.typed-subtypeTyped-constraint-rule-5"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@subtype]"
    "\x{a}" ~
    "        "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
OpenArabicPE_att.pointing.attributes =
  OpenArabicPE_att.pointing.attribute.target
OpenArabicPE_att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list { xsd:anyURI+ }
  }?
OpenArabicPE_att.edition.attributes =
  OpenArabicPE_att.edition.attribute.ed,
  OpenArabicPE_att.edition.attribute.edRef
OpenArabicPE_att.edition.attribute.ed =
  
  ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute ed {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenArabicPE_att.edition.attribute.edRef =
  
  ## (edition reference) provides a pointer to the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute edRef {
    list { xsd:anyURI+ }
  }?
OpenArabicPE_att.styleDef.attribute.scheme =
  
  ## identifies the language used to describe the rendition.
  attribute scheme {
    
    ## Cascading Stylesheet Language
    "css"
    | 
      ## Extensible Stylesheet Language Formatting Objects
      "xslfo"
    | 
      ## Informal free text description
      "free"
    | 
      ## A user-defined rendition description language
      "other"
  }?
OpenArabicPE_att.styleDef.attribute.schemeVersion =
  
  ## supplies a version number for the style language provided in scheme.
  attribute schemeVersion {
    xsd:token { pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}" }
  }?
sch:pattern [
  id =
    "tei_OpenArabicPE-att.styleDef-schemeVersion-schemeVersionRequiresScheme-constraint-rule-6"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@schemeVersion]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@scheme and not(@scheme = 'free')"
      "\x{a}" ~
      "              @schemeVersion can only be used if @scheme is specified.\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
OpenArabicPE_att.tableDecoration.attributes =
  OpenArabicPE_att.tableDecoration.attribute.role,
  OpenArabicPE_att.tableDecoration.attribute.rows,
  OpenArabicPE_att.tableDecoration.attribute.cols
OpenArabicPE_att.tableDecoration.attribute.role =
  
  ## indicates the kind of information held in this cell or in each cell of this row.
  [ a:defaultValue = "data" ]
  attribute role {
    
    ##
    "data"
    | 
      ##
      "label"
  }?
OpenArabicPE_att.tableDecoration.attribute.rows =
  
  ## indicates the number of rows occupied by this cell or row.
  [ a:defaultValue = "1" ] attribute rows { xsd:nonNegativeInteger }?
OpenArabicPE_att.tableDecoration.attribute.cols =
  
  ## (columns) indicates the number of columns occupied by this cell or row.
  [ a:defaultValue = "1" ] attribute cols { xsd:nonNegativeInteger }?
OpenArabicPE_att.timed.attributes = empty
OpenArabicPE_att.citing.attributes =
  OpenArabicPE_att.citing.attribute.unit,
  OpenArabicPE_att.citing.attribute.from,
  OpenArabicPE_att.citing.attribute.to
OpenArabicPE_att.citing.attribute.unit =
  
  ## identifies the unit of information conveyed by the element, e.g. columns, pages, volume, entry.
  ## Suggested values include: 1] volume; 2] issue; 3] page; 4] line; 5] chapter; 6] part; 7] column; 8] entry
  attribute unit {
    
    ## the element contains a volume number.
    "volume"
    | 
      ## the element contains an issue number, or volume and issue numbers.
      "issue"
    | 
      ## the element contains a page number or page range.
      "page"
    | 
      ## the element contains a line number or line range.
      "line"
    | 
      ## the element contains a chapter indication (number and/or title)
      "chapter"
    | 
      ## the element identifies a part of a book or collection.
      "part"
    | 
      ## the element identifies an entry number or label in a list of entries.
      "column"
    | 
      ## the element identifies a column.
      "entry"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenArabicPE_att.citing.attribute.from =
  
  ## specifies the starting point of the range of units indicated by the unit attribute.
  attribute from {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenArabicPE_att.citing.attribute.to =
  
  ## specifies the end-point of the range of units indicated by the unit attribute.
  attribute to {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenArabicPE_model.nameLike.agent =
  OpenArabicPE_name | OpenArabicPE_orgName | OpenArabicPE_persName
OpenArabicPE_model.nameLike.agent_alternation =
  OpenArabicPE_name | OpenArabicPE_orgName | OpenArabicPE_persName
OpenArabicPE_model.nameLike.agent_sequence =
  OpenArabicPE_name, OpenArabicPE_orgName, OpenArabicPE_persName
OpenArabicPE_model.nameLike.agent_sequenceOptional =
  OpenArabicPE_name?, OpenArabicPE_orgName?, OpenArabicPE_persName?
OpenArabicPE_model.nameLike.agent_sequenceOptionalRepeatable =
  OpenArabicPE_name*, OpenArabicPE_orgName*, OpenArabicPE_persName*
OpenArabicPE_model.nameLike.agent_sequenceRepeatable =
  OpenArabicPE_name+, OpenArabicPE_orgName+, OpenArabicPE_persName+
OpenArabicPE_model.segLike = OpenArabicPE_seg
OpenArabicPE_model.hiLike = OpenArabicPE_hi
OpenArabicPE_model.hiLike_alternation = OpenArabicPE_hi
OpenArabicPE_model.hiLike_sequence = OpenArabicPE_hi
OpenArabicPE_model.hiLike_sequenceOptional = OpenArabicPE_hi?
OpenArabicPE_model.hiLike_sequenceOptionalRepeatable = OpenArabicPE_hi*
OpenArabicPE_model.hiLike_sequenceRepeatable = OpenArabicPE_hi+
OpenArabicPE_model.emphLike =
  OpenArabicPE_foreign | OpenArabicPE_term | OpenArabicPE_title
OpenArabicPE_model.emphLike_alternation =
  OpenArabicPE_foreign | OpenArabicPE_term | OpenArabicPE_title
OpenArabicPE_model.emphLike_sequence =
  OpenArabicPE_foreign, OpenArabicPE_term, OpenArabicPE_title
OpenArabicPE_model.emphLike_sequenceOptional =
  OpenArabicPE_foreign?, OpenArabicPE_term?, OpenArabicPE_title?
OpenArabicPE_model.emphLike_sequenceOptionalRepeatable =
  OpenArabicPE_foreign*, OpenArabicPE_term*, OpenArabicPE_title*
OpenArabicPE_model.emphLike_sequenceRepeatable =
  OpenArabicPE_foreign+, OpenArabicPE_term+, OpenArabicPE_title+
OpenArabicPE_model.highlighted =
  OpenArabicPE_model.hiLike | OpenArabicPE_model.emphLike
OpenArabicPE_model.dateLike = OpenArabicPE_date | OpenArabicPE_time
OpenArabicPE_model.dateLike_alternation =
  OpenArabicPE_date | OpenArabicPE_time
OpenArabicPE_model.dateLike_sequence =
  OpenArabicPE_date, OpenArabicPE_time
OpenArabicPE_model.dateLike_sequenceOptional =
  OpenArabicPE_date?, OpenArabicPE_time?
OpenArabicPE_model.dateLike_sequenceOptionalRepeatable =
  OpenArabicPE_date*, OpenArabicPE_time*
OpenArabicPE_model.dateLike_sequenceRepeatable =
  OpenArabicPE_date+, OpenArabicPE_time+
OpenArabicPE_model.measureLike =
  OpenArabicPE_num
  | OpenArabicPE_measure
  | OpenArabicPE_measureGrp
  | OpenArabicPE_geo
OpenArabicPE_model.measureLike_alternation =
  OpenArabicPE_num
  | OpenArabicPE_measure
  | OpenArabicPE_measureGrp
  | OpenArabicPE_geo
OpenArabicPE_model.measureLike_sequence =
  OpenArabicPE_num,
  OpenArabicPE_measure,
  OpenArabicPE_measureGrp,
  OpenArabicPE_geo
OpenArabicPE_model.measureLike_sequenceOptional =
  OpenArabicPE_num?,
  OpenArabicPE_measure?,
  OpenArabicPE_measureGrp?,
  OpenArabicPE_geo?
OpenArabicPE_model.measureLike_sequenceOptionalRepeatable =
  OpenArabicPE_num*,
  OpenArabicPE_measure*,
  OpenArabicPE_measureGrp*,
  OpenArabicPE_geo*
OpenArabicPE_model.measureLike_sequenceRepeatable =
  OpenArabicPE_num+,
  OpenArabicPE_measure+,
  OpenArabicPE_measureGrp+,
  OpenArabicPE_geo+
OpenArabicPE_model.egLike = notAllowed
OpenArabicPE_model.egLike_alternation = notAllowed
OpenArabicPE_model.egLike_sequence = empty
OpenArabicPE_model.egLike_sequenceOptional = empty
OpenArabicPE_model.egLike_sequenceOptionalRepeatable = empty
OpenArabicPE_model.egLike_sequenceRepeatable = notAllowed
OpenArabicPE_model.graphicLike = OpenArabicPE_graphic
OpenArabicPE_model.offsetLike = notAllowed
OpenArabicPE_model.offsetLike_alternation = notAllowed
OpenArabicPE_model.offsetLike_sequence = empty
OpenArabicPE_model.offsetLike_sequenceOptional = empty
OpenArabicPE_model.offsetLike_sequenceOptionalRepeatable = empty
OpenArabicPE_model.offsetLike_sequenceRepeatable = notAllowed
OpenArabicPE_model.pPart.msdesc = notAllowed
OpenArabicPE_model.pPart.editorial =
  OpenArabicPE_choice
  | OpenArabicPE_abbr
  | OpenArabicPE_expan
  | OpenArabicPE_ex
  | OpenArabicPE_am
OpenArabicPE_model.pPart.editorial_alternation =
  OpenArabicPE_choice
  | OpenArabicPE_abbr
  | OpenArabicPE_expan
  | OpenArabicPE_ex
  | OpenArabicPE_am
OpenArabicPE_model.pPart.editorial_sequence =
  OpenArabicPE_choice,
  OpenArabicPE_abbr,
  OpenArabicPE_expan,
  OpenArabicPE_ex,
  OpenArabicPE_am
OpenArabicPE_model.pPart.editorial_sequenceOptional =
  OpenArabicPE_choice?,
  OpenArabicPE_abbr?,
  OpenArabicPE_expan?,
  OpenArabicPE_ex?,
  OpenArabicPE_am?
OpenArabicPE_model.pPart.editorial_sequenceOptionalRepeatable =
  OpenArabicPE_choice*,
  OpenArabicPE_abbr*,
  OpenArabicPE_expan*,
  OpenArabicPE_ex*,
  OpenArabicPE_am*
OpenArabicPE_model.pPart.editorial_sequenceRepeatable =
  OpenArabicPE_choice+,
  OpenArabicPE_abbr+,
  OpenArabicPE_expan+,
  OpenArabicPE_ex+,
  OpenArabicPE_am+
OpenArabicPE_model.pPart.transcriptional =
  OpenArabicPE_sic
  | OpenArabicPE_corr
  | OpenArabicPE_orig
  | OpenArabicPE_add
  | OpenArabicPE_del
  | OpenArabicPE_unclear
  | OpenArabicPE_supplied
OpenArabicPE_model.pPart.transcriptional_alternation =
  OpenArabicPE_sic
  | OpenArabicPE_corr
  | OpenArabicPE_orig
  | OpenArabicPE_add
  | OpenArabicPE_del
  | OpenArabicPE_unclear
  | OpenArabicPE_supplied
OpenArabicPE_model.pPart.transcriptional_sequence =
  OpenArabicPE_sic,
  OpenArabicPE_corr,
  OpenArabicPE_orig,
  OpenArabicPE_add,
  OpenArabicPE_del,
  OpenArabicPE_unclear,
  OpenArabicPE_supplied
OpenArabicPE_model.pPart.transcriptional_sequenceOptional =
  OpenArabicPE_sic?,
  OpenArabicPE_corr?,
  OpenArabicPE_orig?,
  OpenArabicPE_add?,
  OpenArabicPE_del?,
  OpenArabicPE_unclear?,
  OpenArabicPE_supplied?
OpenArabicPE_model.pPart.transcriptional_sequenceOptionalRepeatable =
  OpenArabicPE_sic*,
  OpenArabicPE_corr*,
  OpenArabicPE_orig*,
  OpenArabicPE_add*,
  OpenArabicPE_del*,
  OpenArabicPE_unclear*,
  OpenArabicPE_supplied*
OpenArabicPE_model.pPart.transcriptional_sequenceRepeatable =
  OpenArabicPE_sic+,
  OpenArabicPE_corr+,
  OpenArabicPE_orig+,
  OpenArabicPE_add+,
  OpenArabicPE_del+,
  OpenArabicPE_unclear+,
  OpenArabicPE_supplied+
OpenArabicPE_model.pPart.edit =
  OpenArabicPE_model.pPart.editorial
  | OpenArabicPE_model.pPart.transcriptional
OpenArabicPE_model.linePart =
  OpenArabicPE_model.hiLike
  | OpenArabicPE_choice
  | OpenArabicPE_add
  | OpenArabicPE_del
  | OpenArabicPE_unclear
  | OpenArabicPE_seg
  | OpenArabicPE_zone
OpenArabicPE_model.ptrLike = OpenArabicPE_ptr | OpenArabicPE_ref
OpenArabicPE_model.lPart = notAllowed
OpenArabicPE_model.global.meta = notAllowed
OpenArabicPE_model.milestoneLike =
  OpenArabicPE_milestone
  | OpenArabicPE_gb
  | OpenArabicPE_pb
  | OpenArabicPE_lb
  | OpenArabicPE_cb
  | OpenArabicPE_fw
OpenArabicPE_model.gLike = notAllowed
OpenArabicPE_model.oddDecl = notAllowed
OpenArabicPE_model.oddDecl_alternation = notAllowed
OpenArabicPE_model.oddDecl_sequence = empty
OpenArabicPE_model.oddDecl_sequenceOptional = empty
OpenArabicPE_model.oddDecl_sequenceOptionalRepeatable = empty
OpenArabicPE_model.oddDecl_sequenceRepeatable = notAllowed
OpenArabicPE_model.phrase.xml =
  OpenArabicPE_att | OpenArabicPE_gi | OpenArabicPE_tag
OpenArabicPE_model.specDescLike = notAllowed
OpenArabicPE_model.biblLike =
  OpenArabicPE_bibl
  | OpenArabicPE_biblStruct
  | OpenArabicPE_listBibl
  | OpenArabicPE_biblFull
OpenArabicPE_model.biblLike_alternation =
  OpenArabicPE_bibl
  | OpenArabicPE_biblStruct
  | OpenArabicPE_listBibl
  | OpenArabicPE_biblFull
OpenArabicPE_model.biblLike_sequence =
  OpenArabicPE_bibl,
  OpenArabicPE_biblStruct,
  OpenArabicPE_listBibl,
  OpenArabicPE_biblFull
OpenArabicPE_model.biblLike_sequenceOptional =
  OpenArabicPE_bibl?,
  OpenArabicPE_biblStruct?,
  OpenArabicPE_listBibl?,
  OpenArabicPE_biblFull?
OpenArabicPE_model.biblLike_sequenceOptionalRepeatable =
  OpenArabicPE_bibl*,
  OpenArabicPE_biblStruct*,
  OpenArabicPE_listBibl*,
  OpenArabicPE_biblFull*
OpenArabicPE_model.biblLike_sequenceRepeatable =
  OpenArabicPE_bibl+,
  OpenArabicPE_biblStruct+,
  OpenArabicPE_listBibl+,
  OpenArabicPE_biblFull+
OpenArabicPE_model.headLike = OpenArabicPE_head
OpenArabicPE_model.headLike_alternation = OpenArabicPE_head
OpenArabicPE_model.headLike_sequence = OpenArabicPE_head
OpenArabicPE_model.headLike_sequenceOptional = OpenArabicPE_head?
OpenArabicPE_model.headLike_sequenceOptionalRepeatable =
  OpenArabicPE_head*
OpenArabicPE_model.headLike_sequenceRepeatable = OpenArabicPE_head+
OpenArabicPE_model.labelLike = OpenArabicPE_label
OpenArabicPE_model.labelLike_alternation = OpenArabicPE_label
OpenArabicPE_model.labelLike_sequence = OpenArabicPE_label
OpenArabicPE_model.labelLike_sequenceOptional = OpenArabicPE_label?
OpenArabicPE_model.labelLike_sequenceOptionalRepeatable =
  OpenArabicPE_label*
OpenArabicPE_model.labelLike_sequenceRepeatable = OpenArabicPE_label+
OpenArabicPE_model.listLike =
  OpenArabicPE_list
  | OpenArabicPE_listOrg
  | OpenArabicPE_listEvent
  | OpenArabicPE_listPerson
  | OpenArabicPE_listPlace
  | OpenArabicPE_listRelation
  | OpenArabicPE_listNym
  | OpenArabicPE_table
OpenArabicPE_model.listLike_alternation =
  OpenArabicPE_list
  | OpenArabicPE_listOrg
  | OpenArabicPE_listEvent
  | OpenArabicPE_listPerson
  | OpenArabicPE_listPlace
  | OpenArabicPE_listRelation
  | OpenArabicPE_listNym
  | OpenArabicPE_table
OpenArabicPE_model.listLike_sequence =
  OpenArabicPE_list,
  OpenArabicPE_listOrg,
  OpenArabicPE_listEvent,
  OpenArabicPE_listPerson,
  OpenArabicPE_listPlace,
  OpenArabicPE_listRelation,
  OpenArabicPE_listNym,
  OpenArabicPE_table
OpenArabicPE_model.listLike_sequenceOptional =
  OpenArabicPE_list?,
  OpenArabicPE_listOrg?,
  OpenArabicPE_listEvent?,
  OpenArabicPE_listPerson?,
  OpenArabicPE_listPlace?,
  OpenArabicPE_listRelation?,
  OpenArabicPE_listNym?,
  OpenArabicPE_table?
OpenArabicPE_model.listLike_sequenceOptionalRepeatable =
  OpenArabicPE_list*,
  OpenArabicPE_listOrg*,
  OpenArabicPE_listEvent*,
  OpenArabicPE_listPerson*,
  OpenArabicPE_listPlace*,
  OpenArabicPE_listRelation*,
  OpenArabicPE_listNym*,
  OpenArabicPE_table*
OpenArabicPE_model.listLike_sequenceRepeatable =
  OpenArabicPE_list+,
  OpenArabicPE_listOrg+,
  OpenArabicPE_listEvent+,
  OpenArabicPE_listPerson+,
  OpenArabicPE_listPlace+,
  OpenArabicPE_listRelation+,
  OpenArabicPE_listNym+,
  OpenArabicPE_table+
OpenArabicPE_model.noteLike = OpenArabicPE_note
OpenArabicPE_model.lLike = OpenArabicPE_l
OpenArabicPE_model.lLike_alternation = OpenArabicPE_l
OpenArabicPE_model.lLike_sequence = OpenArabicPE_l
OpenArabicPE_model.lLike_sequenceOptional = OpenArabicPE_l?
OpenArabicPE_model.lLike_sequenceOptionalRepeatable = OpenArabicPE_l*
OpenArabicPE_model.lLike_sequenceRepeatable = OpenArabicPE_l+
OpenArabicPE_model.pLike = OpenArabicPE_p | OpenArabicPE_ab
OpenArabicPE_model.pLike_alternation = OpenArabicPE_p | OpenArabicPE_ab
OpenArabicPE_model.pLike_sequence = OpenArabicPE_p, OpenArabicPE_ab
OpenArabicPE_model.pLike_sequenceOptional =
  OpenArabicPE_p?, OpenArabicPE_ab?
OpenArabicPE_model.pLike_sequenceOptionalRepeatable =
  OpenArabicPE_p*, OpenArabicPE_ab*
OpenArabicPE_model.pLike_sequenceRepeatable =
  OpenArabicPE_p+, OpenArabicPE_ab+
OpenArabicPE_model.stageLike = notAllowed
OpenArabicPE_model.stageLike_alternation = notAllowed
OpenArabicPE_model.stageLike_sequence = empty
OpenArabicPE_model.stageLike_sequenceOptional = empty
OpenArabicPE_model.stageLike_sequenceOptionalRepeatable = empty
OpenArabicPE_model.stageLike_sequenceRepeatable = notAllowed
OpenArabicPE_model.entryPart = notAllowed
OpenArabicPE_model.eventLike =
  OpenArabicPE_event | OpenArabicPE_listEvent
OpenArabicPE_model.global.edit = OpenArabicPE_gap
OpenArabicPE_model.divPart =
  OpenArabicPE_model.lLike | OpenArabicPE_model.pLike | OpenArabicPE_lg
OpenArabicPE_model.persStateLike =
  OpenArabicPE_persName | OpenArabicPE_floruit | OpenArabicPE_trait
OpenArabicPE_model.personLike =
  OpenArabicPE_org | OpenArabicPE_person | OpenArabicPE_personGrp
OpenArabicPE_model.personPart =
  OpenArabicPE_model.biblLike
  | OpenArabicPE_model.eventLike
  | OpenArabicPE_model.persStateLike
  | OpenArabicPE_name
  | OpenArabicPE_idno
  | OpenArabicPE_birth
  | OpenArabicPE_death
OpenArabicPE_model.placeNamePart = OpenArabicPE_placeName
OpenArabicPE_model.placeNamePart_alternation = OpenArabicPE_placeName
OpenArabicPE_model.placeNamePart_sequence = OpenArabicPE_placeName
OpenArabicPE_model.placeNamePart_sequenceOptional =
  OpenArabicPE_placeName?
OpenArabicPE_model.placeNamePart_sequenceOptionalRepeatable =
  OpenArabicPE_placeName*
OpenArabicPE_model.placeNamePart_sequenceRepeatable =
  OpenArabicPE_placeName+
OpenArabicPE_model.placeStateLike =
  OpenArabicPE_model.placeNamePart
  | OpenArabicPE_location
  | OpenArabicPE_trait
OpenArabicPE_model.placeStateLike_alternation =
  OpenArabicPE_model.placeNamePart_alternation
  | OpenArabicPE_location
  | OpenArabicPE_trait
OpenArabicPE_model.placeStateLike_sequence =
  OpenArabicPE_model.placeNamePart_sequence,
  OpenArabicPE_location,
  OpenArabicPE_trait
OpenArabicPE_model.placeStateLike_sequenceOptional =
  OpenArabicPE_model.placeNamePart_sequenceOptional?,
  OpenArabicPE_location?,
  OpenArabicPE_trait?
OpenArabicPE_model.placeStateLike_sequenceOptionalRepeatable =
  OpenArabicPE_model.placeNamePart_sequenceOptionalRepeatable*,
  OpenArabicPE_location*,
  OpenArabicPE_trait*
OpenArabicPE_model.placeStateLike_sequenceRepeatable =
  OpenArabicPE_model.placeNamePart_sequenceRepeatable+,
  OpenArabicPE_location+,
  OpenArabicPE_trait+
OpenArabicPE_model.orgPart =
  OpenArabicPE_model.eventLike
  | OpenArabicPE_listOrg
  | OpenArabicPE_listPerson
  | OpenArabicPE_listPlace
OpenArabicPE_model.publicationStmtPart.agency =
  OpenArabicPE_publisher
  | OpenArabicPE_distributor
  | OpenArabicPE_authority
OpenArabicPE_model.publicationStmtPart.detail =
  OpenArabicPE_model.ptrLike
  | OpenArabicPE_date
  | OpenArabicPE_pubPlace
  | OpenArabicPE_idno
  | OpenArabicPE_availability
OpenArabicPE_model.availabilityPart = OpenArabicPE_licence
OpenArabicPE_model.certLike = notAllowed
OpenArabicPE_model.descLike = notAllowed
OpenArabicPE_model.quoteLike = OpenArabicPE_quote | OpenArabicPE_cit
OpenArabicPE_model.quoteLike_alternation =
  OpenArabicPE_quote | OpenArabicPE_cit
OpenArabicPE_model.quoteLike_sequence =
  OpenArabicPE_quote, OpenArabicPE_cit
OpenArabicPE_model.quoteLike_sequenceOptional =
  OpenArabicPE_quote?, OpenArabicPE_cit?
OpenArabicPE_model.quoteLike_sequenceOptionalRepeatable =
  OpenArabicPE_quote*, OpenArabicPE_cit*
OpenArabicPE_model.quoteLike_sequenceRepeatable =
  OpenArabicPE_quote+, OpenArabicPE_cit+
OpenArabicPE_model.qLike =
  OpenArabicPE_model.quoteLike
  | OpenArabicPE_said
  | OpenArabicPE_q
  | OpenArabicPE_floatingText
OpenArabicPE_model.qLike_alternation =
  OpenArabicPE_model.quoteLike_alternation
  | OpenArabicPE_said
  | OpenArabicPE_q
  | OpenArabicPE_floatingText
OpenArabicPE_model.qLike_sequence =
  OpenArabicPE_model.quoteLike_sequence,
  OpenArabicPE_said,
  OpenArabicPE_q,
  OpenArabicPE_floatingText
OpenArabicPE_model.qLike_sequenceOptional =
  OpenArabicPE_model.quoteLike_sequenceOptional?,
  OpenArabicPE_said?,
  OpenArabicPE_q?,
  OpenArabicPE_floatingText?
OpenArabicPE_model.qLike_sequenceOptionalRepeatable =
  OpenArabicPE_model.quoteLike_sequenceOptionalRepeatable*,
  OpenArabicPE_said*,
  OpenArabicPE_q*,
  OpenArabicPE_floatingText*
OpenArabicPE_model.qLike_sequenceRepeatable =
  OpenArabicPE_model.quoteLike_sequenceRepeatable+,
  OpenArabicPE_said+,
  OpenArabicPE_q+,
  OpenArabicPE_floatingText+
OpenArabicPE_model.respLike =
  OpenArabicPE_author
  | OpenArabicPE_editor
  | OpenArabicPE_respStmt
  | OpenArabicPE_funder
OpenArabicPE_model.divWrapper =
  OpenArabicPE_byline | OpenArabicPE_dateline | OpenArabicPE_salute
OpenArabicPE_model.divTopPart =
  OpenArabicPE_model.headLike | OpenArabicPE_opener
OpenArabicPE_model.divTop =
  OpenArabicPE_model.divWrapper | OpenArabicPE_model.divTopPart
OpenArabicPE_model.frontPart.drama = notAllowed
OpenArabicPE_model.pLike.front = OpenArabicPE_head | OpenArabicPE_byline
OpenArabicPE_model.divBottomPart =
  OpenArabicPE_trailer | OpenArabicPE_closer
OpenArabicPE_model.divBottom =
  OpenArabicPE_model.divWrapper | OpenArabicPE_model.divBottomPart
OpenArabicPE_model.choicePart =
  OpenArabicPE_sic
  | OpenArabicPE_corr
  | OpenArabicPE_orig
  | OpenArabicPE_unclear
  | OpenArabicPE_abbr
  | OpenArabicPE_expan
  | OpenArabicPE_seg
  | OpenArabicPE_ex
  | OpenArabicPE_am
  | OpenArabicPE_supplied
OpenArabicPE_model.imprintPart =
  OpenArabicPE_publisher
  | OpenArabicPE_biblScope
  | OpenArabicPE_pubPlace
  | OpenArabicPE_distributor
OpenArabicPE_model.addressLike = notAllowed
OpenArabicPE_model.addressLike_alternation = notAllowed
OpenArabicPE_model.addressLike_sequence = empty
OpenArabicPE_model.addressLike_sequenceOptional = empty
OpenArabicPE_model.addressLike_sequenceOptionalRepeatable = empty
OpenArabicPE_model.addressLike_sequenceRepeatable = notAllowed
OpenArabicPE_model.nameLike =
  OpenArabicPE_model.nameLike.agent
  | OpenArabicPE_model.offsetLike
  | OpenArabicPE_model.placeStateLike
  | OpenArabicPE_rs
  | OpenArabicPE_idno
  | OpenArabicPE_model.persNamePart
OpenArabicPE_model.nameLike_alternation =
  OpenArabicPE_model.nameLike.agent_alternation
  | OpenArabicPE_model.offsetLike_alternation
  | OpenArabicPE_model.placeStateLike_alternation
  | OpenArabicPE_rs
  | OpenArabicPE_idno
  | OpenArabicPE_model.persNamePart_alternation
OpenArabicPE_model.nameLike_sequence =
  OpenArabicPE_model.nameLike.agent_sequence,
  OpenArabicPE_model.offsetLike_sequence,
  OpenArabicPE_model.placeStateLike_sequence,
  OpenArabicPE_rs,
  OpenArabicPE_idno,
  OpenArabicPE_model.persNamePart_sequence
OpenArabicPE_model.nameLike_sequenceOptional =
  OpenArabicPE_model.nameLike.agent_sequenceOptional?,
  OpenArabicPE_model.offsetLike_sequenceOptional?,
  OpenArabicPE_model.placeStateLike_sequenceOptional?,
  OpenArabicPE_rs?,
  OpenArabicPE_idno?,
  OpenArabicPE_model.persNamePart_sequenceOptional?
OpenArabicPE_model.nameLike_sequenceOptionalRepeatable =
  OpenArabicPE_model.nameLike.agent_sequenceOptionalRepeatable*,
  OpenArabicPE_model.offsetLike_sequenceOptionalRepeatable*,
  OpenArabicPE_model.placeStateLike_sequenceOptionalRepeatable*,
  OpenArabicPE_rs*,
  OpenArabicPE_idno*,
  OpenArabicPE_model.persNamePart_sequenceOptionalRepeatable*
OpenArabicPE_model.nameLike_sequenceRepeatable =
  OpenArabicPE_model.nameLike.agent_sequenceRepeatable+,
  OpenArabicPE_model.offsetLike_sequenceRepeatable+,
  OpenArabicPE_model.placeStateLike_sequenceRepeatable+,
  OpenArabicPE_rs+,
  OpenArabicPE_idno+,
  OpenArabicPE_model.persNamePart_sequenceRepeatable+
OpenArabicPE_model.global =
  OpenArabicPE_model.global.meta
  | OpenArabicPE_model.milestoneLike
  | OpenArabicPE_model.noteLike
  | OpenArabicPE_model.global.edit
  | OpenArabicPE_figure
  | OpenArabicPE_metamark
OpenArabicPE_model.biblPart =
  OpenArabicPE_model.respLike
  | OpenArabicPE_model.imprintPart
  | OpenArabicPE_citedRange
  | OpenArabicPE_bibl
  | OpenArabicPE_edition
  | OpenArabicPE_availability
  | OpenArabicPE_listRelation
OpenArabicPE_model.frontPart =
  OpenArabicPE_model.frontPart.drama | OpenArabicPE_listBibl
OpenArabicPE_model.pPart.data =
  OpenArabicPE_model.dateLike
  | OpenArabicPE_model.measureLike
  | OpenArabicPE_model.addressLike
  | OpenArabicPE_model.nameLike
OpenArabicPE_model.inter =
  OpenArabicPE_model.egLike
  | OpenArabicPE_model.oddDecl
  | OpenArabicPE_model.biblLike
  | OpenArabicPE_model.labelLike
  | OpenArabicPE_model.listLike
  | OpenArabicPE_model.stageLike
  | OpenArabicPE_model.qLike
OpenArabicPE_model.common =
  OpenArabicPE_model.divPart | OpenArabicPE_model.inter
OpenArabicPE_model.phrase =
  OpenArabicPE_model.segLike
  | OpenArabicPE_model.highlighted
  | OpenArabicPE_model.graphicLike
  | OpenArabicPE_model.pPart.msdesc
  | OpenArabicPE_model.pPart.edit
  | OpenArabicPE_model.ptrLike
  | OpenArabicPE_model.lPart
  | OpenArabicPE_model.phrase.xml
  | OpenArabicPE_model.specDescLike
  | OpenArabicPE_model.pPart.data
OpenArabicPE_model.limitedPhrase =
  OpenArabicPE_model.hiLike
  | OpenArabicPE_model.emphLike
  | OpenArabicPE_model.pPart.msdesc
  | OpenArabicPE_model.pPart.editorial
  | OpenArabicPE_model.ptrLike
  | OpenArabicPE_model.phrase.xml
  | OpenArabicPE_model.pPart.data
OpenArabicPE_model.divLike = OpenArabicPE_div
OpenArabicPE_model.divGenLike = notAllowed
OpenArabicPE_model.div1Like = notAllowed
OpenArabicPE_model.teiHeaderPart =
  OpenArabicPE_encodingDesc | OpenArabicPE_profileDesc
OpenArabicPE_model.sourceDescPart = notAllowed
OpenArabicPE_model.encodingDescPart =
  OpenArabicPE_projectDesc
  | OpenArabicPE_samplingDecl
  | OpenArabicPE_editorialDecl
  | OpenArabicPE_refsDecl
  | OpenArabicPE_listPrefixDef
OpenArabicPE_model.editorialDeclPart = OpenArabicPE_quotation
OpenArabicPE_model.profileDescPart =
  OpenArabicPE_langUsage
  | OpenArabicPE_calendarDesc
  | OpenArabicPE_particDesc
  | OpenArabicPE_settingDesc
OpenArabicPE_model.resourceLike =
  OpenArabicPE_text | OpenArabicPE_facsimile
OpenArabicPE_att.personal.attributes =
  OpenArabicPE_att.naming.attributes,
  OpenArabicPE_att.personal.attribute.sort
OpenArabicPE_att.personal.attribute.sort =
  
  ## specifies the sort order of the name component in relation to others within the name.
  attribute sort { xsd:nonNegativeInteger }?
OpenArabicPE_model.placeLike = OpenArabicPE_place
OpenArabicPE_att.milestoneUnit.attributes =
  OpenArabicPE_att.milestoneUnit.attribute.unit
OpenArabicPE_att.milestoneUnit.attribute.unit =
  
  ## provides a conventional name for the kind of section changing at this milestone.
  ## Suggested values include: 1] page; 2] column; 3] line; 4] book; 5] poem; 6] canto; 7] speaker; 8] stanza; 9] act; 10] scene; 11] section; 12] absent; 13] unnumbered
  attribute unit {
    
    ## physical page breaks (synonymous with the pb element).
    "page"
    | 
      ## column breaks.
      "column"
    | 
      ## line breaks (synonymous with the lb element).
      "line"
    | 
      ## any units termed book, liber, etc.
      "book"
    | 
      ## individual poems in a collection.
      "poem"
    | 
      ## cantos or other major sections of a poem.
      "canto"
    | 
      ## changes of speaker or narrator.
      "speaker"
    | 
      ## stanzas within a poem, book, or canto.
      "stanza"
    | 
      ## acts within a play.
      "act"
    | 
      ## scenes within a play or act.
      "scene"
    | 
      ## sections of any kind.
      "section"
    | 
      ## passages not present in the reference edition.
      "absent"
    | 
      ## passages present in the text, but not to be included as part of the reference.
      "unnumbered"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }
OpenArabicPE_p =
  
  ## (paragraph) marks paragraphs in prose. [3.1. Paragraphs 7.2.5. Speech Contents]
  element p {
    OpenArabicPE_macro.paraContent
    >> sch:pattern [
         id = "tei_OpenArabicPE-p-abstractModel-p-constraint-report-4"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(ancestor::floatingText) and (ancestor::tei:p or ancestor::tei:ab)          and not(parent::tei:exemplum                |parent::tei:item                |parent::tei:note                |parent::tei:q                |parent::tei:quote                |parent::tei:remarks                |parent::tei:said                |parent::tei:sp                |parent::tei:stage                |parent::tei:cell                |parent::tei:figure                )"
             "\x{a}" ~
             "        Abstract model violation: Paragraphs may not contain other paragraphs or ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "tei_OpenArabicPE-p-abstractModel-structure-l-constraint-report-5"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:p[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, p, or ab.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_foreign =
  
  ## identifies a word or phrase as belonging to some language other than that of the surrounding text. [3.3.2.1. Foreign Words or Expressions]
  element foreign {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the surrounding text, for reasons concerning which no claim is made. [3.3.2.2. Emphatic Words and Phrases 3.3.2. Emphasis, Foreign Words, and Unusual Language]
  element hi {
    OpenArabicPE_macro.paraContent,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_said =
  
  ## (speech or thought) indicates passages thought or spoken aloud, whether explicitly indicated in the source or not, whether directly or indirectly reported, whether by real people or fictional characters. [3.3.3. Quotation]
  element said {
    OpenArabicPE_macro.specialPara,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.ascribed.attributes,
    
    ## may be used to indicate whether the quoted matter is regarded as having been vocalized or signed.
    [ a:defaultValue = "unknown" ]
    attribute aloud {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    
    ## may be used to indicate whether the quoted matter is regarded as direct or indirect speech.
    [ a:defaultValue = "true" ]
    attribute direct {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    empty
  }
OpenArabicPE_quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external to the text. [3.3.3. Quotation 4.3.1. Grouped Texts]
  element quote {
    OpenArabicPE_macro.specialPara,
    OpenArabicPE_att.global.attribute.xmlid,
    OpenArabicPE_att.global.attribute.n,
    OpenArabicPE_att.global.attribute.xmllang,
    OpenArabicPE_att.global.rendition.attribute.style,
    OpenArabicPE_att.global.rendition.attribute.rendition,
    OpenArabicPE_att.global.linking.attribute.corresp,
    OpenArabicPE_att.global.linking.attribute.next,
    OpenArabicPE_att.global.linking.attribute.prev,
    OpenArabicPE_att.global.facs.attribute.facs,
    OpenArabicPE_att.global.change.attribute.change,
    OpenArabicPE_att.global.responsibility.attribute.resp,
    OpenArabicPE_att.typed.attributes,
    
    ## (rendition) indicates how the element in question was rendered or presented in the source text.
    ## Suggested values include: 1] brackets; 2] quotation-marks
    [ a:defaultValue = "quotation-marks" ]
    attribute rend {
      list {
        (
         ##
         "brackets"
         | 
           ##
           "quotation-marks"
         | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
      }
    }?,
    empty
  }
OpenArabicPE_q =
  
  ## (quoted) contains material which is distinguished from the surrounding text using quotation marks or a similar method, for any one of a variety of reasons including, but not limited to: direct speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and passages that are mentioned but not used. [3.3.3. Quotation]
  element q {
    OpenArabicPE_macro.specialPara,
    OpenArabicPE_att.global.attribute.xmlid,
    OpenArabicPE_att.global.attribute.n,
    OpenArabicPE_att.global.attribute.xmllang,
    OpenArabicPE_att.global.rendition.attribute.style,
    OpenArabicPE_att.global.rendition.attribute.rendition,
    OpenArabicPE_att.global.linking.attribute.corresp,
    OpenArabicPE_att.global.linking.attribute.next,
    OpenArabicPE_att.global.linking.attribute.prev,
    OpenArabicPE_att.global.facs.attribute.facs,
    OpenArabicPE_att.global.change.attribute.change,
    OpenArabicPE_att.global.responsibility.attribute.resp,
    OpenArabicPE_att.ascribed.attributes,
    
    ## (rendition) indicates how the element in question was rendered or presented in the source text.
    ## Suggested values include: 1] brackets; 2] quotation-marks
    [ a:defaultValue = "quotation-marks" ]
    attribute rend {
      list {
        (
         ##
         "brackets"
         | 
           ##
           "quotation-marks"
         | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
      }
    }?,
    
    ## may be used to indicate whether the offset passage is spoken or thought, or to characterize it more finely.
    ## Suggested values include: 1] spoken; 2] thought; 3] written; 4] soCalled; 5] foreign; 6] distinct; 7] term; 8] emph; 9] mentioned
    attribute type {
      
      ## representation of speech
      "spoken"
      | 
        ## representation of thought, e.g. internal monologue
        "thought"
      | 
        ## quotation from a written source
        "written"
      | 
        ## authorial distance
        "soCalled"
      | 
        ##
        "foreign"
      | 
        ## linguistically distinct
        "distinct"
      | 
        ## technical term
        "term"
      | 
        ## rhetorically emphasized
        "emph"
      | 
        ## refering to itself, not its normal referent
        "mentioned"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_cit =
  
  ## (cited quotation) contains a quotation from some other document, together with a bibliographic reference to its source. In a dictionary it may contain an example text with at least one occurrence of the word form, used in the sense being described, or a translation of the headword, or an example. [3.3.3. Quotation 4.3.1. Grouped Texts 9.3.5.1. Examples]
  element cit {
    (OpenArabicPE_model.qLike
     | OpenArabicPE_model.egLike
     | OpenArabicPE_model.biblLike
     | OpenArabicPE_model.ptrLike
     | OpenArabicPE_model.global
     | OpenArabicPE_model.entryPart)+,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_term =
  
  ## contains a single-word, multi-word, or symbolic designation which is regarded as a technical term. [3.3.4. Terms, Glosses, Equivalents, and Descriptions]
  element term {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.pointing.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.canonical.attributes,
    OpenArabicPE_att.cReferencing.attributes,
    empty
  }
OpenArabicPE_sic =
  
  ## (Latin for thus or so) contains text reproduced although apparently incorrect or inaccurate. [3.4.1. Apparent Errors]
  element sic {
    OpenArabicPE_macro.paraContent,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_corr =
  
  ## (correction) contains the correct form of a passage apparently erroneous in the copy text. [3.4.1. Apparent Errors]
  element corr {
    OpenArabicPE_macro.paraContent,
    OpenArabicPE_att.global.attribute.xmlid,
    OpenArabicPE_att.global.attribute.n,
    OpenArabicPE_att.global.attribute.xmllang,
    OpenArabicPE_att.global.rendition.attribute.rend,
    OpenArabicPE_att.global.rendition.attribute.style,
    OpenArabicPE_att.global.rendition.attribute.rendition,
    OpenArabicPE_att.global.linking.attribute.corresp,
    OpenArabicPE_att.global.linking.attribute.next,
    OpenArabicPE_att.global.linking.attribute.prev,
    OpenArabicPE_att.global.facs.attribute.facs,
    OpenArabicPE_att.global.change.attribute.change,
    OpenArabicPE_att.typed.attributes,
    
    ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
    attribute resp {
      list { xsd:anyURI+ }
    },
    empty
  }
OpenArabicPE_choice =
  
  ## groups a number of alternative encodings for the same point in a text. [3.4. Simple Editorial Changes]
  element choice {
    (OpenArabicPE_model.choicePart | OpenArabicPE_choice)*,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_orig =
  
  ## (original form) contains a reading which is marked as following the original, rather than being normalized or corrected. [3.4.2. Regularization and
  ## Normalization 12. Critical Apparatus]
  element orig {
    OpenArabicPE_macro.paraContent,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_gap =
  
  ## indicates a point where material has been omitted in a transcription, whether for editorial reasons described in the TEI header, as part of sampling practice, or because the material is illegible, invisible, or inaudible. [3.4.3. Additions, Deletions, and Omissions]
  element gap {
    (OpenArabicPE_model.descLike | OpenArabicPE_model.certLike)*,
    OpenArabicPE_att.global.attribute.xmlid,
    OpenArabicPE_att.global.attribute.n,
    OpenArabicPE_att.global.attribute.xmllang,
    OpenArabicPE_att.global.rendition.attribute.rend,
    OpenArabicPE_att.global.rendition.attribute.style,
    OpenArabicPE_att.global.rendition.attribute.rendition,
    OpenArabicPE_att.global.linking.attribute.corresp,
    OpenArabicPE_att.global.linking.attribute.next,
    OpenArabicPE_att.global.linking.attribute.prev,
    OpenArabicPE_att.global.facs.attribute.facs,
    OpenArabicPE_att.global.change.attribute.change,
    OpenArabicPE_att.timed.attributes,
    
    ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
    [ a:defaultValue = "#org_MS" ]
    attribute resp {
      list { xsd:anyURI+ }
    },
    
    ## gives the reason for omission
    ## Suggested values include: 1] cancelled; 2] deleted; 3] editorial; 4] illegible; 5] inaudible; 6] irrelevant; 7] sampling
    attribute reason {
      list {
        (
         ##
         "cancelled"
         | 
           ##
           "deleted"
         | 
           ## for features omitted from transcription due to editorial policy
           "editorial"
         | 
           ##
           "illegible"
         | 
           ##
           "inaudible"
         | 
           ##
           "irrelevant"
         | 
           ##
           "sampling"
         | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
      }
    }?,
    
    ## in the case of text omitted from the transcription because of deliberate deletion by an identifiable hand, indicates the hand which made the deletion.
    attribute hand { xsd:anyURI }?,
    
    ## in the case of text omitted because of damage, categorizes the cause of the damage, if it can be identified.
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_add =
  
  ## (addition) contains letters, words, or phrases inserted in the source text by an author, scribe, or a previous annotator or corrector. [3.4.3. Additions, Deletions, and Omissions]
  element add {
    OpenArabicPE_macro.paraContent,
    OpenArabicPE_att.global.attribute.xmlid,
    OpenArabicPE_att.global.attribute.n,
    OpenArabicPE_att.global.attribute.xmllang,
    OpenArabicPE_att.global.rendition.attribute.rend,
    OpenArabicPE_att.global.rendition.attribute.style,
    OpenArabicPE_att.global.rendition.attribute.rendition,
    OpenArabicPE_att.global.linking.attribute.corresp,
    OpenArabicPE_att.global.linking.attribute.next,
    OpenArabicPE_att.global.linking.attribute.prev,
    OpenArabicPE_att.global.facs.attribute.facs,
    OpenArabicPE_att.global.change.attribute.change,
    OpenArabicPE_att.placement.attributes,
    OpenArabicPE_att.typed.attributes,
    
    ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
    attribute resp {
      list { xsd:anyURI+ }
    },
    empty
  }
OpenArabicPE_del =
  
  ## (deletion) contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector. [3.4.3. Additions, Deletions, and Omissions]
  element del {
    OpenArabicPE_macro.paraContent,
    OpenArabicPE_att.global.attribute.xmlid,
    OpenArabicPE_att.global.attribute.n,
    OpenArabicPE_att.global.attribute.xmllang,
    OpenArabicPE_att.global.rendition.attribute.rend,
    OpenArabicPE_att.global.rendition.attribute.style,
    OpenArabicPE_att.global.rendition.attribute.rendition,
    OpenArabicPE_att.global.linking.attribute.corresp,
    OpenArabicPE_att.global.linking.attribute.next,
    OpenArabicPE_att.global.linking.attribute.prev,
    OpenArabicPE_att.global.facs.attribute.facs,
    OpenArabicPE_att.global.change.attribute.change,
    OpenArabicPE_att.typed.attributes,
    
    ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
    attribute resp {
      list { xsd:anyURI+ }
    },
    empty
  }
OpenArabicPE_unclear =
  
  ## contains a word, phrase, or passage which cannot be transcribed with certainty because it is illegible or inaudible in the source. [11.3.3.1. Damage, Illegibility, and Supplied Text 3.4.3. Additions, Deletions, and Omissions]
  element unclear {
    OpenArabicPE_macro.paraContent,
    OpenArabicPE_att.global.attributes,
    
    ## indicates why the material is hard to transcribe.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## Where the difficulty in transcription arises from action (partial deletion, etc.) assignable to an identifiable hand, signifies the hand responsible for the action.
    attribute hand { xsd:anyURI }?,
    
    ## Where the difficulty in transcription arises from damage, categorizes the cause of the damage, if it can be identified.
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_name =
  
  ## (name, proper noun) contains a proper noun or noun phrase. [3.5.1. Referring Strings]
  element name {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.personal.attributes,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_rs =
  
  ## (referencing string) contains a general purpose name or referring string. [13.2.1. Personal Names 3.5.1. Referring Strings]
  element rs {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.naming.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_num =
  
  ## (number) contains a number, written in any form. [3.5.3. Numbers and
  ## Measures]
  element num {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    
    ## 
    ## Suggested values include: 1] d1; 2] d2; 3] d3; 4] d4; 5] d5; 6] d6
    attribute subtype {
      
      ## Single digit
      "d1"
      | 
        ## Two digits
        "d2"
      | 
        ## Three digits
        "d3"
      | 
        ## Four digits
        "d4"
      | 
        ## Five digits
        "d5"
      | 
        ## Six digits
        "d6"
      | xsd:Name
    }?,
    
    ## indicates the type of numeric value.
    ## Suggested values include: 1] cardinal; 2] ordinal; 3] fraction; 4] percentage
    attribute type {
      
      ## absolute number, e.g. 21, 21.5
      "cardinal"
      | 
        ## ordinal number, e.g. 21st
        "ordinal"
      | 
        ## fraction, e.g. one half or three-quarters
        "fraction"
      | 
        ## a percentage
        "percentage"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## supplies the value of the number in standard form.
    attribute value {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    empty
  }
OpenArabicPE_measure =
  
  ## contains a word or phrase referring to some quantity of an object or commodity, usually comprising a number, a unit, and a commodity name. [3.5.3. Numbers and
  ## Measures]
  element measure {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.measurement.attributes,
    
    ## specifies the type of measurement in any convenient typology.
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_measureGrp =
  
  ## (measure group) contains a group of dimensional specifications which relate to the same object, for example the height and width of a manuscript page. [10.3.4. Dimensions]
  element measureGrp {
    (text | OpenArabicPE_model.gLike | OpenArabicPE_model.measureLike)*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.measurement.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_date =
  
  ## contains a date in any format. [3.5.4. Dates and Times 2.2.4. Publication, Distribution, Licensing, etc. 2.6. The Revision Description 3.11.2.4. Imprint, Size of a Document, and Reprint Information 15.2.3. The Setting Description 13.3.6. Dates and Times]
  element date {
    (text
     | OpenArabicPE_model.gLike
     | OpenArabicPE_model.phrase
     | OpenArabicPE_model.global)*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.datable.w3c.attribute.when,
    OpenArabicPE_att.datable.w3c.attribute.notBefore,
    OpenArabicPE_att.datable.w3c.attribute.notAfter,
    OpenArabicPE_att.datable.w3c.attribute.from,
    OpenArabicPE_att.datable.w3c.attribute.to,
    OpenArabicPE_att.datable.custom.attribute.when-custom,
    OpenArabicPE_att.datable.custom.attribute.notBefore-custom,
    OpenArabicPE_att.datable.custom.attribute.notAfter-custom,
    OpenArabicPE_att.datable.custom.attribute.from-custom,
    OpenArabicPE_att.datable.custom.attribute.to-custom,
    OpenArabicPE_att.typed.attribute.subtype,
    (
     ## indicates the system or calendar to which the date represented by the content of this element belongs.
     attribute calendar {
       
       ## Gregorian calendar
       "#cal_gregorian"
       | 
         ## Muslim lunar calendar known as hijrī
         "#cal_islamic"
       | 
         ## Reformed Julian calendar beginning the Year with 1 January
         "#cal_julian"
       | 
         ## Ottoman fiscal calendar also known as mālī or rūmī calendar
         "#cal_ottomanfiscal"
       | 
         ## The Coptic calendar
         "#cal_coptic"
     }?)
    >> sch:pattern [
         id =
           "tei_OpenArabicPE-date-calendar-calendar-constraint-rule-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length(.) gt 0"
             "\x{a}" ~
             "@calendar indicates the system or calendar to which the date represented by the content of this element\x{a}" ~
             "belongs, but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## supplies a pointer to a calendar element or other means of interpreting the values of the custom dating attributes.
    attribute datingMethod {
      
      ## Gregorian calendar
      "#cal_gregorian"
      | 
        ## Muslim lunar calendar known as hijrī beginning the year with 1 Muḥarram
        "#cal_islamic"
      | 
        ## Reformed Julian calendar beginning the year with 1 January
        "#cal_julian"
      | 
        ## Ottoman fiscal calendar also known as mālī or rūmī calendar
        "#cal_ottomanfiscal"
      | 
        ## The Coptic calendar
        "#cal_coptic"
    }?,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Suggested values include: 1] official; 2] scheduled; 3] supplied
    attribute type {
      
      ## A publication date as provided on the masthead
      "official"
      | 
        ## A publication date according to the publication schedule
        "scheduled"
      | 
        ## A publication date as indicated by other sources
        "supplied"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_time =
  
  ## contains a phrase defining a time of day in any format. [3.5.4. Dates and Times]
  element time {
    (text
     | OpenArabicPE_model.gLike
     | OpenArabicPE_model.phrase
     | OpenArabicPE_model.global)*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_abbr =
  
  ## (abbreviation) contains an abbreviation of any sort. [3.5.5. Abbreviations and Their Expansions]
  element abbr {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attribute.subtype,
    
    ## allows the encoder to classify the abbreviation according to some convenient typology.
    ## Sample values include: 1] suspension; 2] contraction; 3] brevigraph; 4] superscription; 5] acronym; 6] title; 7] organization; 8] geographic
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_expan =
  
  ## (expansion) contains the expansion of an abbreviation. [3.5.5. Abbreviations and Their Expansions]
  element expan {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_ptr =
  
  ## (pointer) defines a pointer to another location. [3.6. Simple Links and Cross-References 16.1. Links]
  element ptr {
    empty
    >> sch:pattern [
         id = "tei_OpenArabicPE-ptr-ptrAtts-constraint-report-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ptr"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "attributes @target and @cRef may be supplied on "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.pointing.attributes,
    OpenArabicPE_att.internetMedia.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.cReferencing.attributes,
    empty
  }
OpenArabicPE_ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment. [3.6. Simple Links and Cross-References 16.1. Links]
  element ref {
    OpenArabicPE_macro.paraContent
    >> sch:pattern [
         id = "tei_OpenArabicPE-ref-refAtts-constraint-report-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes @target' and @cRef' may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.pointing.attributes,
    OpenArabicPE_att.internetMedia.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.cReferencing.attributes,
    empty
  }
OpenArabicPE_list =
  
  ## contains any sequence of items organized as a list. [3.7. Lists]
  element list {
    ((OpenArabicPE_model.divTop | OpenArabicPE_model.global)*,
     ((OpenArabicPE_item, OpenArabicPE_model.global*)+
      | (OpenArabicPE_label,
         OpenArabicPE_model.global*,
         OpenArabicPE_item,
         OpenArabicPE_model.global*)+),
     (OpenArabicPE_model.divBottom, OpenArabicPE_model.global*)*)
    >> sch:pattern [
         id =
           "tei_OpenArabicPE-list-gloss-list-must-have-labels-constraint-rule-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:list[@type='gloss']"
           "\x{a}" ~
           "	              "
           sch:assert [
             test = "tei:label"
             'The content of a "gloss" list should include a sequence of one or more pairs of a label element followed by an item element'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attribute.subtype,
    
    ## describes the nature of the items in the list.
    ## Suggested values include: 1] gloss; 2] index; 3] instructions; 4] litany; 5] syllogism
    attribute type {
      
      ## each list item glosses some term or concept, which is given by a label element preceding the list item.
      "gloss"
      | 
        ## each list item is an entry in an index such as the alphabetical topical index at the back of a print volume.
        "index"
      | 
        ## each list item is a step in a sequence of instructions, as in a recipe.
        "instructions"
      | 
        ## each list item is one of a sequence of petitions, supplications or invocations, typically in a religious ritual.
        "litany"
      | 
        ## each list item is part of an argument consisting of two or more propositions and a final conclusion derived from them.
        "syllogism"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_item =
  
  ## contains one component of a list. [3.7. Lists 2.6. The Revision Description]
  element item {
    OpenArabicPE_macro.specialPara,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_label =
  
  ## contains any label or heading used to identify part of a text, typically but not exclusively in a list or glossary. [3.7. Lists]
  element label {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.placement.attributes,
    empty
  }
OpenArabicPE_head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list, glossary, manuscript description, etc. [4.2.1. Headings and Trailers]
  element head {
    (text
     | OpenArabicPE_lg
     | OpenArabicPE_model.gLike
     | OpenArabicPE_model.phrase
     | OpenArabicPE_model.inter
     | OpenArabicPE_model.lLike
     | OpenArabicPE_model.global)*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.placement.attributes,
    empty
  }
OpenArabicPE_note =
  
  ## contains a note or annotation. [3.8.1. Notes and Simple Annotation 2.2.6. The Notes Statement 3.11.2.8. Notes and Statement of Language 9.3.5.4. Notes within Entries]
  element note {
    OpenArabicPE_macro.specialPara,
    OpenArabicPE_att.global.attribute.xmlid,
    OpenArabicPE_att.global.attribute.xmllang,
    OpenArabicPE_att.global.rendition.attribute.rend,
    OpenArabicPE_att.global.rendition.attribute.style,
    OpenArabicPE_att.global.rendition.attribute.rendition,
    OpenArabicPE_att.global.linking.attribute.corresp,
    OpenArabicPE_att.global.linking.attribute.next,
    OpenArabicPE_att.global.linking.attribute.prev,
    OpenArabicPE_att.global.facs.attribute.facs,
    OpenArabicPE_att.global.change.attribute.change,
    OpenArabicPE_att.global.responsibility.attribute.resp,
    OpenArabicPE_att.placement.attributes,
    OpenArabicPE_att.pointing.attributes,
    OpenArabicPE_att.typed.attribute.subtype,
    
    ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
    [ a:defaultValue = "1" ] attribute n { xsd:string }?,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Suggested values include: 1] endnote; 2] footnote; 3] gloss; 4] inline
    [ a:defaultValue = "footnote" ]
    attribute type {
      
      ##
      "endnote"
      | 
        ##
        "footnote"
      | 
        ##
        "gloss"
      | 
        ##
        "inline"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates whether the copy text shows the exact place of reference for the note.
    [ a:defaultValue = "true" ] attribute anchored { xsd:boolean }?,
    
    ## points to the end of the span to which the note is attached, if the note is not embedded in the text at that point.
    attribute targetEnd {
      list { xsd:anyURI+ }
    }?,
    empty
  }
OpenArabicPE_graphic =
  
  ## indicates the location of a graphic or illustration, either forming part of a text, or providing an image of it. [3.9. Graphics and Other Non-textual Components 11.1. Digital Facsimiles]
  element graphic {
    OpenArabicPE_model.descLike*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.media.attributes,
    OpenArabicPE_att.resourced.attributes,
    empty
  }
OpenArabicPE_milestone =
  
  ## marks a boundary point separating any kind of section of a text, typically but not necessarily indicating a point at which some part of a standard reference system changes, where the change is not represented by a structural element. [3.10.3. Milestone
  ## Elements]
  element milestone {
    empty,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.milestoneUnit.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.edition.attributes,
    empty
  }
OpenArabicPE_gb =
  
  ## (gathering beginning) marks the beginning of a new gathering or quire in a transcribed codex. [3.10.3. Milestone
  ## Elements]
  element gb {
    empty,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_pb =
  
  ## (page beginning) marks the beginning of a new page in a paginated document. [3.10.3. Milestone
  ## Elements]
  element pb {
    empty,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.edition.attribute.edRef,
    
    ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
    ## Suggested values include: 1] print; 2] shamela
    [ a:defaultValue = "print" ]
    attribute ed {
      list {
        (
         ## Page beginning, i.e. break, according to a printed edition
         "print"
         | 
           ## Page beginning, i.e. break, as found in the transcription from Maktabat al-Shamela
           "shamela"
         | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
      }
    },
    empty
  }
OpenArabicPE_lb =
  
  ## (line beginning) marks the beginning of a new (typographic) line in some edition or version of a text. [3.10.3. Milestone
  ## Elements 7.2.5. Speech Contents]
  element lb {
    empty,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.edition.attribute.edRef,
    
    ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
    ## Suggested values include: 1] print; 2] shamela
    [ a:defaultValue = "print" ]
    attribute ed {
      list {
        (
         ## Page beginning, i.e. break, according to a printed edition
         "print"
         | 
           ## Page beginning, i.e. break, as found in the transcription from Maktabat al-Shamela
           "shamela"
         | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
      }
    }?,
    empty
  }
OpenArabicPE_cb =
  
  ## (column beginning) marks the beginning of a new column of a text on a multi-column page. [3.10.3. Milestone
  ## Elements]
  element cb {
    empty,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.edition.attribute.edRef,
    
    ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
    ## Suggested values include: 1] print; 2] shamela
    [ a:defaultValue = "print" ]
    attribute ed {
      list {
        (
         ## Page beginning, i.e. break, according to a printed edition
         "print"
         | 
           ## Page beginning, i.e. break, as found in the transcription from Maktabat al-Shamela
           "shamela"
         | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
      }
    }?,
    empty
  }
OpenArabicPE_monogr =
  
  ## (monographic level) contains bibliographic elements describing an item (e.g. a book or journal) published as an independent item (i.e. as a separate physical object). [3.11.2.1. Analytic, Monographic, and Series Levels]
  element monogr {
    ((((OpenArabicPE_author
        | OpenArabicPE_editor
        | OpenArabicPE_respStmt),
       (OpenArabicPE_author
        | OpenArabicPE_editor
        | OpenArabicPE_respStmt)*,
       OpenArabicPE_title+,
       (OpenArabicPE_model.ptrLike
        | OpenArabicPE_idno
        | OpenArabicPE_editor
        | OpenArabicPE_respStmt)*)
      | ((OpenArabicPE_title
          | OpenArabicPE_model.ptrLike
          | OpenArabicPE_idno)+,
         (OpenArabicPE_author
          | OpenArabicPE_editor
          | OpenArabicPE_respStmt)*)
      | (OpenArabicPE_authority, OpenArabicPE_idno))?,
     OpenArabicPE_availability*,
     OpenArabicPE_model.noteLike*,
     (OpenArabicPE_edition,
      (OpenArabicPE_idno
       | OpenArabicPE_model.ptrLike
       | OpenArabicPE_editor
       | OpenArabicPE_funder
       | OpenArabicPE_respStmt)*)*,
     OpenArabicPE_imprint,
     (OpenArabicPE_imprint | OpenArabicPE_biblScope)*),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_author =
  
  ## in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement]
  element author {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.naming.attributes,
    empty
  }
OpenArabicPE_editor =
  
  ## contains a secondary statement of responsibility for a bibliographic item, for example the name of an individual, institution or organization, (or of several such) acting as editor, compiler, translator, etc. [3.11.2.2. Titles, Authors, and Editors]
  element editor {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.naming.attributes,
    empty
  }
OpenArabicPE_respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition, recording, or series, where the specialized elements for authors, editors, etc. do not suffice or do not apply. May also be used to encode information about individuals or organizations which have played a role in the production or distribution of a bibliographic work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element respStmt {
    (((OpenArabicPE_resp+, OpenArabicPE_model.nameLike.agent+)
      | (OpenArabicPE_model.nameLike.agent+, OpenArabicPE_resp+)),
     OpenArabicPE_note*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.canonical.attributes,
    empty
  }
OpenArabicPE_resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role in the production or distribution of a work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element resp {
    OpenArabicPE_macro.phraseSeq.limited,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.canonical.attributes,
    OpenArabicPE_att.datable.attributes,
    empty
  }
OpenArabicPE_title =
  
  ## contains a title for any kind of work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.5. The Series Statement]
  element title {
    OpenArabicPE_macro.paraContent,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.canonical.attributes,
    OpenArabicPE_att.typed.attribute.subtype,
    OpenArabicPE_att.datable.attributes,
    
    ## classifies the title according to some convenient typology.
    ## Sample values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates the bibliographic level for a title, that is, whether it identifies an article, book, journal, series, or unpublished material.
    attribute level {
      
      ## (analytic) the title applies to an analytic item, such as an article, poem, or other work published as part of a larger item.
      "a"
      | 
        ## (monographic) the title applies to a monograph such as a book or other item considered to be a distinct publication, including single volumes of multi-volume works
        "m"
      | 
        ## (journal) the title applies to any serial or periodical publication such as a journal, magazine, or newspaper
        "j"
      | 
        ## (series) the title applies to a series of otherwise distinct publications such as a collection
        "s"
      | 
        ## (unpublished) the title applies to any unpublished material (including theses and dissertations unless published by a commercial press)
        "u"
    }?,
    empty
  }
OpenArabicPE_imprint =
  
  ## groups information relating to the publication or distribution of a bibliographic item. [3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element imprint {
    (empty*,
     ((OpenArabicPE_model.imprintPart | OpenArabicPE_model.dateLike),
      OpenArabicPE_respStmt*,
      OpenArabicPE_model.global*)+),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_publisher =
  
  ## provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.11.2.4. Imprint, Size of a Document, and Reprint Information 2.2.4. Publication, Distribution, Licensing, etc.]
  element publisher {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_biblScope =
  
  ## (scope of bibliographic reference) defines the scope of a bibliographic reference, for example as a list of page numbers, or a named subdivision of a larger work. [3.11.2.5. Scopes and Ranges in Bibliographic Citations]
  element biblScope {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.citing.attributes,
    empty
  }
OpenArabicPE_citedRange =
  
  ## (cited range) defines the range of cited content, often represented by pages or other units [3.11.2.5. Scopes and Ranges in Bibliographic Citations]
  element citedRange {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.pointing.attributes,
    OpenArabicPE_att.citing.attributes,
    empty
  }
OpenArabicPE_pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published. [3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element pubPlace {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.naming.attributes,
    empty
  }
OpenArabicPE_bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may not be explicitly tagged. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element bibl {
    (text
     | OpenArabicPE_model.gLike
     | OpenArabicPE_model.highlighted
     | OpenArabicPE_model.pPart.data
     | OpenArabicPE_model.pPart.edit
     | OpenArabicPE_model.segLike
     | OpenArabicPE_model.ptrLike
     | OpenArabicPE_model.biblPart
     | OpenArabicPE_model.global)*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.docStatus.attributes,
    empty
  }
OpenArabicPE_biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements appear and in a specified order. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element biblStruct {
    (OpenArabicPE_monogr+,
     (OpenArabicPE_model.noteLike
      | OpenArabicPE_model.ptrLike
      | OpenArabicPE_citedRange)*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.docStatus.attributes,
    empty
  }
OpenArabicPE_listBibl =
  
  ## (citation list) contains a list of bibliographic citations of any kind. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element listBibl {
    (OpenArabicPE_model.headLike*,
     (OpenArabicPE_model.biblLike | OpenArabicPE_model.milestoneLike)+,
     (OpenArabicPE_relation | OpenArabicPE_listRelation)*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse. [3.12.1. Core Tags for Verse 3.12. Passages of Verse or Drama 7.2.5. Speech Contents]
  element l {
    ((text
      | OpenArabicPE_model.gLike
      | OpenArabicPE_model.phrase
      | OpenArabicPE_model.inter
      | OpenArabicPE_model.global)*)
    >> sch:pattern [
         id =
           "tei_OpenArabicPE-l-abstractModel-structure-l-constraint-report-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:l"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:l[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain lines or lg elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    [ a:defaultValue = "bayt" ]
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_lg =
  
  ## (line group) contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain, verse paragraph, etc. [3.12.1. Core Tags for Verse 3.12. Passages of Verse or Drama 7.2.5. Speech Contents]
  element lg {
    ((OpenArabicPE_model.divTop | OpenArabicPE_model.global)*,
     (OpenArabicPE_model.lLike
      | OpenArabicPE_model.stageLike
      | OpenArabicPE_model.labelLike
      | OpenArabicPE_lg),
     (OpenArabicPE_model.lLike
      | OpenArabicPE_model.stageLike
      | OpenArabicPE_model.labelLike
      | OpenArabicPE_model.global
      | OpenArabicPE_lg)*,
     (OpenArabicPE_model.divBottom, OpenArabicPE_model.global*)*)
    >> sch:pattern [
         id = "tei_OpenArabicPE-lg-atleast1oflggapl-constraint-assert-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
             "An lg element\x{a}" ~
             "        must contain at least one child l, lg or gap element."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "tei_OpenArabicPE-lg-abstractModel-structure-l-constraint-report-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:lg[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain line groups.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.divLike.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_teiCorpus =
  
  ## contains the whole of a TEI encoded corpus, comprising a single corpus header and one or more TEI elements, each containing a single text header and a text. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element teiCorpus {
    (OpenArabicPE_teiHeader,
     ((OpenArabicPE_model.resourceLike+,
       (OpenArabicPE_TEI | OpenArabicPE_teiCorpus)*)
      | (OpenArabicPE_TEI | OpenArabicPE_teiCorpus)+)),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    
    ## The version of the TEI scheme
    [ a:defaultValue = "5.0" ]
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
OpenArabicPE_att.patternReplacement.attributes =
  OpenArabicPE_att.patternReplacement.attribute.matchPattern,
  OpenArabicPE_att.patternReplacement.attribute.replacementPattern
OpenArabicPE_att.patternReplacement.attribute.matchPattern =
  
  ## specifies a regular expression against which the values of other attributes can be matched.
  attribute matchPattern { xsd:token }
OpenArabicPE_att.patternReplacement.attribute.replacementPattern =
  
  ## specifies a replacement pattern, that is, the skeleton of a relative or absolute URI containing references to groups in the matchPattern which, once subpattern substitution has been performed, complete the URI.
  attribute replacementPattern { text }
OpenArabicPE_teiHeader =
  
  ## (TEI header) supplies descriptive and declarative metadata associated with a digital resource or set of resources. [2.1.1. The TEI Header and Its Components 15.1. Varieties of Composite Text]
  element teiHeader {
    (OpenArabicPE_fileDesc,
     OpenArabicPE_model.teiHeaderPart*,
     OpenArabicPE_revisionDesc?),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2. The File Description 2.1.1. The TEI Header and Its Components]
  element fileDesc {
    ((OpenArabicPE_titleStmt,
      OpenArabicPE_editionStmt?,
      OpenArabicPE_publicationStmt,
      OpenArabicPE_notesStmt?),
     OpenArabicPE_sourceDesc+),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1. The Title Statement 2.2. The File Description]
  element titleStmt {
    (OpenArabicPE_title+, OpenArabicPE_model.respLike*),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_funder =
  
  ## (funding body) specifies the name of an individual, institution, or organization responsible for the funding of a project or text. [2.2.1. The Title Statement]
  element funder {
    OpenArabicPE_macro.phraseSeq.limited,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.canonical.attributes,
    empty
  }
OpenArabicPE_editionStmt =
  
  ## (edition statement) groups information relating to one edition of a text. [2.2.2. The Edition Statement 2.2. The File Description]
  element editionStmt {
    (OpenArabicPE_model.pLike+
     | (OpenArabicPE_edition, OpenArabicPE_model.respLike*)),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_edition =
  
  ## describes the particularities of one edition of a text. [2.2.2. The Edition Statement]
  element edition {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4. Publication, Distribution, Licensing, etc. 2.2. The File Description]
  element publicationStmt {
    ((OpenArabicPE_model.publicationStmtPart.agency,
      OpenArabicPE_model.publicationStmtPart.detail*)+
     | OpenArabicPE_model.pLike+),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_distributor =
  
  ## supplies the name of a person or other agency responsible for the distribution of a text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element distributor {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for making a work available, other than a publisher or distributor. [2.2.4. Publication, Distribution, Licensing, etc.]
  element authority {
    OpenArabicPE_macro.phraseSeq.limited,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [2.2.4. Publication, Distribution, Licensing, etc. 2.2.5. The Series Statement 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element idno {
    (text | OpenArabicPE_model.gLike | OpenArabicPE_idno)*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.typed.attribute.subtype,
    
    ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
    ## Suggested values include: 1] ISBN; 2] ISSN; 3] DOI; 4] URI; 5] VIAF; 6] ESTC; 7] OCLC
    attribute type {
      
      ## International Standard Book Number: a 13- or (if assigned prior to 2007) 10-digit identifying number assigned by the publishing industry to a published book or similar item, registered with the International ISBN Agency.
      "ISBN"
      | 
        ## International Standard Serial Number: an eight-digit number to uniquely identify a serial publication.
        "ISSN"
      | 
        ## Digital Object Identifier: a unique string of letters and numbers assigned to an electronic document.
        "DOI"
      | 
        ## Uniform Resource Identifier: a string of characters to uniquely identify a resource which usually contains indication of the means of accessing that resource, the name of its host, and its filepath.
        "URI"
      | 
        ## A data number in the Virtual Internet Authority File assigned to link different names in catalogs around the world for the same entity.
        "VIAF"
      | 
        ## English Short-Title Catalogue number: an identifying number assigned to a document in English printed in the British Isles or North America before 1801.
        "ESTC"
      | 
        ## union catalog number in WorldCat representing a resource held by one or more of the member libraries in the global cooperative Online Computer Library Center.
        "OCLC"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_availability =
  
  ## supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. [2.2.4. Publication, Distribution, Licensing, etc.]
  element availability {
    (OpenArabicPE_model.availabilityPart | OpenArabicPE_model.pLike)+,
    OpenArabicPE_att.global.attributes,
    
    ## supplies a code identifying the current availability of the text.
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text is freely available.
      "free"
      | 
        ## the status of the text is unknown.
        "unknown"
      | 
        ## the text is not freely available.
        "restricted"
    }?,
    empty
  }
OpenArabicPE_licence =
  
  ## contains information about a licence or other legal agreement applicable to the text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element licence {
    OpenArabicPE_macro.specialPara,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.pointing.attributes,
    OpenArabicPE_att.datable.attributes,
    empty
  }
OpenArabicPE_notesStmt =
  
  ## (notes statement) collects together any notes providing information about a text additional to that recorded in other parts of the bibliographic description. [2.2.6. The Notes Statement 2.2. The File Description]
  element notesStmt {
    (OpenArabicPE_model.noteLike)+,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_sourceDesc =
  
  ## (source description) describes the source from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. [2.2.7. The Source Description]
  element sourceDesc {
    (OpenArabicPE_model.pLike+
     | (OpenArabicPE_model.biblLike
        | OpenArabicPE_model.sourceDescPart
        | OpenArabicPE_model.listLike)+),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_biblFull =
  
  ## (fully-structured bibliographic citation) contains a fully-structured bibliographic citation, in which all components of the TEI file description are present. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2. The File Description 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element biblFull {
    (((OpenArabicPE_titleStmt,
       OpenArabicPE_editionStmt?,
       OpenArabicPE_publicationStmt,
       OpenArabicPE_notesStmt?),
      OpenArabicPE_sourceDesc*)
     | (OpenArabicPE_fileDesc, OpenArabicPE_profileDesc)),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.docStatus.attributes,
    empty
  }
OpenArabicPE_encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3. The Encoding Description 2.1.1. The TEI Header and Its Components]
  element encodingDesc {
    (OpenArabicPE_model.encodingDescPart | OpenArabicPE_model.pLike)+,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic file was encoded, together with any other relevant information concerning the process by which it was assembled or collected. [2.3.1. The Project Description 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element projectDesc {
    OpenArabicPE_model.pLike+, OpenArabicPE_att.global.attributes, empty
  }
OpenArabicPE_samplingDecl =
  
  ## (sampling declaration) contains a prose description of the rationale and methods used in sampling texts in the creation of a corpus or collection. [2.3.2. The Sampling Declaration 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element samplingDecl {
    OpenArabicPE_model.pLike+, OpenArabicPE_att.global.attributes, empty
  }
OpenArabicPE_editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [2.3.3. The Editorial Practices Declaration 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element editorialDecl {
    (OpenArabicPE_model.pLike | OpenArabicPE_model.editorialDeclPart)+,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_quotation =
  
  ## specifies editorial practice adopted with respect to quotation marks in the original. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element quotation {
    (OpenArabicPE_model.pLike*)
    >> sch:pattern [
         id =
           "tei_OpenArabicPE-quotation-quotationContents-constraint-report-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:quotation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "not(@marks) and not (tei:p)"
             "\x{a}" ~
             "On "
             sch:name [ ]
             ", either the @marks attribute should be used, or a paragraph of description provided"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenArabicPE_att.global.attributes,
    
    ## (quotation marks) indicates whether or not quotation marks have been retained as content within the text.
    attribute marks {
      
      ## no quotation marks have been retained
      "none"
      | 
        ## some quotation marks have been retained
        "some"
      | 
        ## all quotation marks have been retained
        "all"
    }?,
    empty
  }
OpenArabicPE_refsDecl =
  
  ## (references declaration) specifies how canonical references are constructed for this text. [2.3.6.3. Milestone Method 2.3. The Encoding Description 2.3.6. The Reference System Declaration]
  element refsDecl {
    (OpenArabicPE_model.pLike+),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_prefixDef =
  
  ## (prefix definition) defines a prefixing scheme used in data.pointer values, showing how abbreviated URIs using the scheme may be expanded into full URIs. [16.2.3. Using Abbreviated Pointers]
  element prefixDef {
    OpenArabicPE_model.pLike*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.patternReplacement.attributes,
    
    ## supplies a name which functions as the prefix for an abbreviated pointing scheme such as a private URI scheme. The prefix constitutes the text preceding the first colon.
    attribute ident {
      xsd:token { pattern = "[a-z][a-z0-9\+\.\-]*" }
    },
    empty
  }
OpenArabicPE_listPrefixDef =
  
  ## (list of prefix definitions) contains a list of definitions of prefixing schemes used in data.pointer values, showing how abbreviated URIs using each scheme may be expanded into full URIs. [16.2.3. Using Abbreviated Pointers]
  element listPrefixDef {
    (OpenArabicPE_prefixDef | OpenArabicPE_listPrefixDef)+,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the languages and sublanguages used, the situation in which it was produced, the participants and their setting. [2.4. The Profile Description 2.1.1. The TEI Header and Its Components]
  element profileDesc {
    OpenArabicPE_model.profileDescPart*,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc. represented within a text. [2.4.2. Language Usage 2.4. The Profile Description 15.3.2. Declarable Elements]
  element langUsage {
    (OpenArabicPE_model.pLike+ | OpenArabicPE_language+),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_language =
  
  ## characterizes a single language or sublanguage used within a text. [2.4.2. Language Usage]
  element language {
    OpenArabicPE_macro.phraseSeq.limited,
    OpenArabicPE_att.global.attributes,
    
    ## (identifier) Supplies a language code constructed as defined in BCP 47 which is used to identify the language documented by this element, and which is referenced by the global xml:lang attribute.
    attribute ident {
      xsd:language
      | (
         ##
         "")
    },
    
    ## specifies the approximate percentage (by volume) of the text which uses this language.
    attribute usage { xsd:nonNegativeInteger }?,
    empty
  }
OpenArabicPE_calendarDesc =
  
  ## (calendar description) contains a description of the calendar system used in any dating expression found in the text. [2.4. The Profile Description 2.4.5. Calendar Description]
  element calendarDesc {
    OpenArabicPE_calendar+, OpenArabicPE_att.global.attributes, empty
  }
OpenArabicPE_calendar =
  
  ## describes a calendar or dating system used in a dating formula in the text. [2.4.5. Calendar Description]
  element calendar {
    OpenArabicPE_model.pLike+,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.pointing.attributes,
    empty
  }
OpenArabicPE_revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [2.6. The Revision Description 2.1.1. The TEI Header and Its Components]
  element revisionDesc {
    (OpenArabicPE_list | OpenArabicPE_change+),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.docStatus.attributes,
    empty
  }
OpenArabicPE_change =
  
  ## documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.6. The Revision Description 2.4.1. Creation 11.7. Identifying Changes and Revisions]
  element change {
    OpenArabicPE_macro.specialPara,
    OpenArabicPE_att.ascribed.attributes,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.docStatus.attributes,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    
    ## points to one or more elements that belong to this change.
    attribute target {
      list { xsd:anyURI+ }
    }?,
    empty
  }
OpenArabicPE_TEI =
  
  ## (TEI document) contains a single TEI-conformant document, combining a single TEI header with one or more members of the model.resourceLike class. Multiple TEI elements may be combined to form a teiCorpus element. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element TEI {
    (OpenArabicPE_teiHeader, OpenArabicPE_model.resourceLike+)
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ],
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    
    ## specifies the major version number of the TEI Guidelines against which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
OpenArabicPE_text =
  
  ## contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element text {
    (OpenArabicPE_model.global*,
     (OpenArabicPE_front, OpenArabicPE_model.global*)?,
     (OpenArabicPE_body | OpenArabicPE_group),
     OpenArabicPE_model.global*,
     (OpenArabicPE_back, OpenArabicPE_model.global*)?),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. Default Text Structure]
  element body {
    (OpenArabicPE_model.global*,
     (OpenArabicPE_model.divTop,
      (OpenArabicPE_model.global | OpenArabicPE_model.divTop)*)?,
     (OpenArabicPE_model.divGenLike,
      (OpenArabicPE_model.global | OpenArabicPE_model.divGenLike)*)?,
     ((OpenArabicPE_model.divLike,
       (OpenArabicPE_model.global | OpenArabicPE_model.divGenLike)*)+
      | (OpenArabicPE_model.div1Like,
         (OpenArabicPE_model.global | OpenArabicPE_model.divGenLike)*)+
      | ((OpenArabicPE_model.common, OpenArabicPE_model.global*)+,
         ((OpenArabicPE_model.divLike,
           (OpenArabicPE_model.global
            | OpenArabicPE_model.divGenLike)*)+
          | (OpenArabicPE_model.div1Like,
             (OpenArabicPE_model.global
              | OpenArabicPE_model.divGenLike)*)+)?)),
     (OpenArabicPE_model.divBottom, OpenArabicPE_model.global*)*),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_group =
  
  ## contains the body of a composite text, grouping together a sequence of distinct texts (or groups of such texts) which are regarded as a unit for some purpose, for example the collected works of an author, a sequence of prose essays, etc. [4. Default Text Structure 4.3.1. Grouped Texts 15.1. Varieties of Composite Text]
  element group {
    ((OpenArabicPE_model.divTop | OpenArabicPE_model.global)*,
     ((OpenArabicPE_text | OpenArabicPE_group),
      (OpenArabicPE_text
       | OpenArabicPE_group
       | OpenArabicPE_model.global)*),
     OpenArabicPE_model.divBottom*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_floatingText =
  
  ## contains a single text of any kind, whether unitary or composite, which interrupts the text containing it at any point and after which the surrounding text resumes. [4.3.2. Floating Texts]
  element floatingText {
    (OpenArabicPE_model.global*,
     (OpenArabicPE_front, OpenArabicPE_model.global*)?,
     (OpenArabicPE_body | OpenArabicPE_group),
     OpenArabicPE_model.global*,
     (OpenArabicPE_back, OpenArabicPE_model.global*)?),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text. [4.1. Divisions of the Body]
  element div {
    ((OpenArabicPE_model.divTop | OpenArabicPE_model.global)*,
     ((((OpenArabicPE_model.divLike | OpenArabicPE_model.divGenLike),
        OpenArabicPE_model.global*)+
       | ((OpenArabicPE_model.common, OpenArabicPE_model.global*)+,
          ((OpenArabicPE_model.divLike | OpenArabicPE_model.divGenLike),
           OpenArabicPE_model.global*)*)),
      (OpenArabicPE_model.divBottom, OpenArabicPE_model.global*)*)?)
    >> sch:pattern [
         id =
           "tei_OpenArabicPE-div-abstractModel-structure-l-constraint-report-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test = "ancestor::tei:l"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "tei_OpenArabicPE-div-abstractModel-structure-p-constraint-report-12"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:p or ancestor::tei:ab and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "        Abstract model violation: p and ab may not contain higher-level structural elements such as div.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.divLike.attributes,
    
    ## specifies the structural type
    ## Suggested values include: 1] item; 2] section; 3] volume; 4] issue
    [ a:defaultValue = "item" ]
    attribute type {
      
      ## smallest independent segment, such as a news item or an article in a periodical or of a bill
      "item"
      | 
        ## section of a newspaper issue that explicitly groups items, such as a rubric "domestic news", or sections of a larger item such as the sub divisions of an article or bill
        "section"
      | 
        ##
        "volume"
      | 
        ##
        "issue"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    },
    
    ## specifies a basic content classification
    ## Suggested values include: 1] bill; 2] advert; 3] letter; 4] masthead; 5] verse
    attribute subtype {
      
      ## a legal text
      "bill"
      | 
        ## an advertisement
        "advert"
      | 
        ## a letter
        "letter"
      | 
        ## the masthead of a periodical issue
        "masthead"
      | 
        ##
        "verse"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_trailer =
  
  ## contains a closing title or footer appearing at the end of a division of a text. [4.2.4. Content of Textual Divisions 4.2. Elements Common to All Divisions]
  element trailer {
    (text
     | OpenArabicPE_lg
     | OpenArabicPE_model.gLike
     | OpenArabicPE_model.phrase
     | OpenArabicPE_model.inter
     | OpenArabicPE_model.lLike
     | OpenArabicPE_model.global)*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_byline =
  
  ## contains the primary statement of responsibility given for a work on its title page or at the head or end of the work. [4.2.2. Openers and Closers 4.5. Front Matter]
  element byline {
    (text
     | OpenArabicPE_model.gLike
     | OpenArabicPE_model.phrase
     | OpenArabicPE_model.global)*,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_dateline =
  
  ## contains a brief description of the place, date, time, etc. of production of a letter, newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer. [4.2.2. Openers and Closers]
  element dateline {
    (text
     | OpenArabicPE_model.gLike
     | OpenArabicPE_model.phrase
     | OpenArabicPE_model.global)*,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_opener =
  
  ## groups together dateline, byline, salutation, and similar phrases appearing as a preliminary group at the start of a division, especially of a letter. [4.2. Elements Common to All Divisions]
  element opener {
    (text
     | OpenArabicPE_model.gLike
     | OpenArabicPE_model.phrase
     | OpenArabicPE_byline
     | OpenArabicPE_dateline
     | OpenArabicPE_salute
     | OpenArabicPE_model.global)*,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_closer =
  
  ## groups together salutations, datelines, and similar phrases appearing as a final group at the end of a division, especially of a letter. [4.2.2. Openers and Closers 4.2. Elements Common to All Divisions]
  element closer {
    (text
     | OpenArabicPE_model.gLike
     | OpenArabicPE_dateline
     | OpenArabicPE_salute
     | OpenArabicPE_model.phrase
     | OpenArabicPE_model.global)*,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_salute =
  
  ## (salutation) contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other division of a text, or the salutation in the closing of a letter, preface, etc. [4.2.2. Openers and Closers]
  element salute {
    OpenArabicPE_macro.paraContent,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_front =
  
  ## (front matter) contains any prefatory matter (headers, abstracts, title page, prefaces, dedications, etc.) found at the start of a document, before the main body. [4.6. Title Pages 4. Default Text Structure]
  element front {
    ((OpenArabicPE_model.frontPart
      | OpenArabicPE_model.pLike
      | OpenArabicPE_model.pLike.front
      | OpenArabicPE_model.global)*,
     (((OpenArabicPE_model.div1Like,
        (OpenArabicPE_model.div1Like
         | OpenArabicPE_model.frontPart
         | OpenArabicPE_model.global)*)
       | (OpenArabicPE_model.divLike,
          (OpenArabicPE_model.divLike
           | OpenArabicPE_model.frontPart
           | OpenArabicPE_model.global)*)),
      (OpenArabicPE_model.divBottom,
       (OpenArabicPE_model.divBottom | OpenArabicPE_model.global)*)?)?),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_back =
  
  ## (back matter) contains any appendixes, etc. following the main part of a text. [4.7. Back Matter 4. Default Text Structure]
  element back {
    ((OpenArabicPE_model.frontPart
      | OpenArabicPE_model.pLike.front
      | OpenArabicPE_model.pLike
      | OpenArabicPE_model.listLike
      | OpenArabicPE_model.global)*,
     ((OpenArabicPE_model.div1Like,
       (OpenArabicPE_model.frontPart
        | OpenArabicPE_model.div1Like
        | OpenArabicPE_model.global)*)
      | (OpenArabicPE_model.divLike,
         (OpenArabicPE_model.frontPart
          | OpenArabicPE_model.divLike
          | OpenArabicPE_model.global)*))?,
     (OpenArabicPE_model.divBottomPart,
      (OpenArabicPE_model.divBottomPart
       | OpenArabicPE_model.global)*)?),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_att =
  
  ## (attribute) contains the name of an attribute appearing within running text. [22. Documentation Elements]
  element att {
    xsd:Name,
    OpenArabicPE_att.global.attributes,
    
    ## supplies an identifier for the scheme in which this name is defined.
    ## Sample values include: 1] TEI(text encoding initiative) ; 2] DBK(docbook) ; 3] XX(unknown) ; 4] imaginary; 5] XHTML; 6] XML; 7] XI
    [ a:defaultValue = "TEI" ]
    attribute scheme {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_gi =
  
  ## (element name) contains the name (generic identifier) of an element. [22. Documentation Elements 22.5. Element Specifications]
  element gi {
    xsd:Name,
    OpenArabicPE_att.global.attributes,
    
    ## supplies the name of the scheme in which this name is defined.
    ## Sample values include: 1] TEI; 2] DBK(docbook) ; 3] XX(unknown) ; 4] Schematron; 5] HTML
    [ a:defaultValue = "TEI" ]
    attribute scheme {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_tag =
  
  ## contains text of a complete start- or end-tag, possibly including attribute specifications, but excluding the opening and closing markup delimiter characters. [22. Documentation Elements]
  element tag {
    text,
    OpenArabicPE_att.global.attributes,
    
    ## indicates the type of XML tag intended
    attribute type {
      
      ## a start-tag, with delimiters < and > is intended
      "start"
      | 
        ## an end-tag, with delimiters </ and > is intended
        "end"
      | 
        ## a empty tag, with delimiters < and /> is intended
        "empty"
      | 
        ## a pi (processing instruction), with delimiters <? and ?> is intended
        "pi"
      | 
        ## a comment, with delimiters <!-- and --> is intended
        "comment"
      | 
        ## a marked-section, with delimiters <[CDATA[ and ]]> is intended
        "ms"
    }?,
    
    ## supplies the name of the schema in which this tag is defined.
    ## Sample values include: 1] TEI(text encoding initiative) ; 2] DBK(docbook) ; 3] XX(unknown) ; 4] Schematron; 5] HTML
    [ a:defaultValue = "TEI" ]
    attribute scheme {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_att.datable.custom.attributes =
  OpenArabicPE_att.datable.custom.attribute.when-custom,
  OpenArabicPE_att.datable.custom.attribute.notBefore-custom,
  OpenArabicPE_att.datable.custom.attribute.notAfter-custom,
  OpenArabicPE_att.datable.custom.attribute.from-custom,
  OpenArabicPE_att.datable.custom.attribute.to-custom,
  OpenArabicPE_att.datable.custom.attribute.datingMethod
OpenArabicPE_att.datable.custom.attribute.when-custom =
  
  ## supplies the value of a date or time in some custom standard form.
  attribute when-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenArabicPE_att.datable.custom.attribute.notBefore-custom =
  
  ## specifies the earliest possible date for the event in some custom standard form.
  attribute notBefore-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenArabicPE_att.datable.custom.attribute.notAfter-custom =
  
  ## specifies the latest possible date for the event in some custom standard form.
  attribute notAfter-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenArabicPE_att.datable.custom.attribute.from-custom =
  
  ## indicates the starting point of the period in some custom standard form.
  attribute from-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenArabicPE_att.datable.custom.attribute.to-custom =
  
  ## indicates the ending point of the period in some custom standard form.
  attribute to-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenArabicPE_att.datable.custom.attribute.datingMethod =
  
  ## supplies a pointer to a calendar element or other means of interpreting the values of the custom dating attributes.
  attribute datingMethod { xsd:anyURI }?
OpenArabicPE_model.persNamePart =
  OpenArabicPE_surname
  | OpenArabicPE_forename
  | OpenArabicPE_genName
  | OpenArabicPE_nameLink
  | OpenArabicPE_addName
  | OpenArabicPE_roleName
OpenArabicPE_model.persNamePart_alternation =
  OpenArabicPE_surname
  | OpenArabicPE_forename
  | OpenArabicPE_genName
  | OpenArabicPE_nameLink
  | OpenArabicPE_addName
  | OpenArabicPE_roleName
OpenArabicPE_model.persNamePart_sequence =
  OpenArabicPE_surname,
  OpenArabicPE_forename,
  OpenArabicPE_genName,
  OpenArabicPE_nameLink,
  OpenArabicPE_addName,
  OpenArabicPE_roleName
OpenArabicPE_model.persNamePart_sequenceOptional =
  OpenArabicPE_surname?,
  OpenArabicPE_forename?,
  OpenArabicPE_genName?,
  OpenArabicPE_nameLink?,
  OpenArabicPE_addName?,
  OpenArabicPE_roleName?
OpenArabicPE_model.persNamePart_sequenceOptionalRepeatable =
  OpenArabicPE_surname*,
  OpenArabicPE_forename*,
  OpenArabicPE_genName*,
  OpenArabicPE_nameLink*,
  OpenArabicPE_addName*,
  OpenArabicPE_roleName*
OpenArabicPE_model.persNamePart_sequenceRepeatable =
  OpenArabicPE_surname+,
  OpenArabicPE_forename+,
  OpenArabicPE_genName+,
  OpenArabicPE_nameLink+,
  OpenArabicPE_addName+,
  OpenArabicPE_roleName+
OpenArabicPE_orgName =
  
  ## (organization name) contains an organizational name. [13.2.2. Organizational Names]
  element orgName {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.personal.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including one or more of the person's forenames, surnames, honorifics, added names, etc. [13.2.1. Personal Names]
  element persName {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.personal.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_surname =
  
  ## contains a family (inherited) name, as opposed to a given, baptismal, or nick name. [13.2.1. Personal Names]
  element surname {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.personal.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_forename =
  
  ## contains a forename, given or baptismal name. [13.2.1. Personal Names]
  element forename {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.personal.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_genName =
  
  ## (generational name component) contains a name component used to distinguish otherwise similar names on the basis of the relative ages or generations of the persons named. [13.2.1. Personal Names]
  element genName {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.personal.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_nameLink =
  
  ## (name link) contains a connecting phrase or link used within a name but not regarded as part of it, such as van der or of. [13.2.1. Personal Names]
  element nameLink {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_addName =
  
  ## (additional name) contains an additional name component, such as a nickname, epithet, or alias, or any other descriptive phrase used within a personal name. [13.2.1. Personal Names]
  element addName {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.personal.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    [ a:defaultValue = "title" ]
    attribute type {
      
      ## indicates formal titles, such as "Bey", "Pasha" etc.
      "title"
      | 
        ## indicates honorific addresses or titles, such as Miss, Shaykh , zade
        "honorific"
      | 
        ## indicates ranks within an administrative, military or religious hierarchy, such as farīq , vālī , Captain
        "rank"
      | 
        ## a phrase someone is commonly referred to, such as "Owner of the newspaper xyz"
        "nickname"
      | 
        ## a patronym introduced by “Ibn” ( إبن - son of)
        "nasab"
      | 
        ## a teknonym beginning with Abū ( أبو - father of) or Umm ( أم - mather of). It may also have hypothetical or metaphorical references as a mark of distinction. For example, Abū Yūsuf ( أبو يوسف ) is often used for someone who is called Ya'qūb ( يعقوب )
        "kunyah"
      | 
        ## an honorific name, which is usually ended by the suffix al-Dīn ( الدين )
        "khitab"
      | 
        ## an adjective formed by using the suffix ī in order to indicate the person origin, his birth place, or his residence. It represents the relationship name, which can be a genealogical, political or ideological affiliation of a person. Example: the mathematician al-Khawarizmī refers to “Khuwarism”, the name of a place located in Central Asia
        "nisbah"
    },
    
    ## provides a sub-categorization of the element, if needed
    attribute subtype {
      
      ## Indicates a military rank, such as Captain or Farīq
      "military"
      | 
        ## Indicates a civil rank within the bureaucracy
        "civil"
      | 
        ## Indicates a religious rank, such as Bishop or Muṭrān
        "religious"
    }?,
    empty
  }
OpenArabicPE_roleName =
  
  ## contains a name component which indicates that the referent has a particular role or position in society, such as an official title or rank. [13.2.1. Personal Names]
  element roleName {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.personal.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    [ a:defaultValue = "title" ]
    attribute type {
      
      ## Formal titles, such as "Bey", "Pasha" etc.
      "title"
      | 
        ## Honorific addresses or titles, such as Miss, Shaykh , zade
        "honorific"
      | 
        ## An inherited or life-time title of nobility such as Lord, Viscount, Baron, etc.
        "nobility"
      | 
        ## indicates ranks within an administrative, military or religious hierarchy, such as farīq , vālī , Captain
        "rank"
      | 
        ## a phrase someone is commonly referred to (nick-name), such as "Owner of the newspaper xyz"
        "epithet"
    },
    
    ## provides a sub-categorization of the element, if needed
    attribute subtype {
      
      ## Indicates a military rank, such as Captain or Farīq
      "military"
      | 
        ## Indicates a civil rank within the bureaucracy
        "civil"
      | 
        ## Indicates a religious rank, such as Bishop or Muṭrān
        "religious"
    }?,
    empty
  }
OpenArabicPE_placeName =
  
  ## contains an absolute or relative place name. [13.2.3. Place Names]
  element placeName {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.personal.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_birth =
  
  ## contains information about a person's birth, such as its date and place. [15.2.2. The Participant Description]
  element birth {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.naming.attributes,
    OpenArabicPE_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] caesarean(caesarean section) ; 2] vaginal(vaginal delivery) ; 3] exNihilo(ex nihilo) ; 4] incorporated; 5] founded; 6] established
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_death =
  
  ## contains information about a person's death, such as its date and place. [15.2.2. The Participant Description]
  element death {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.naming.attributes,
    OpenArabicPE_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] proclaimed; 2] assumed; 3] verified; 4] clinical; 5] brain; 6] natural; 7] unnatural; 8] fragmentation; 9] dissolution
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_event =
  
  ## contains data relating to any kind of significant event associated with a person, place, or organization. [13.3.1. Basic Principles]
  element event {
    (OpenArabicPE_model.headLike*,
     (OpenArabicPE_model.pLike+ | OpenArabicPE_model.labelLike+),
     (OpenArabicPE_model.noteLike | OpenArabicPE_model.biblLike)*,
     OpenArabicPE_event*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.naming.attributes,
    
    ## indicates the location of an event by pointing to a place element
    attribute where { xsd:anyURI }?,
    empty
  }
OpenArabicPE_floruit =
  
  ## contains information about a person's period of activity. [13.3.2.1. Personal Characteristics]
  element floruit {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.datable.attributes,
    empty
  }
OpenArabicPE_geo =
  
  ## (geographical coordinates) contains any expression of a set of geographic coordinates, representing a point, line, or area on the surface of the earth in some notation. [13.3.4.1. Varieties of Location]
  element geo { text, OpenArabicPE_att.global.attributes, empty }
OpenArabicPE_listOrg =
  
  ## (list of organizations) contains a list of elements, each of which provides information about an identifiable organization. [13.2.2. Organizational Names]
  element listOrg {
    (OpenArabicPE_model.headLike*,
     (OpenArabicPE_org | OpenArabicPE_listOrg)+,
     (OpenArabicPE_relation | OpenArabicPE_listRelation)*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_listEvent =
  
  ## (list of events) contains a list of descriptions, each of which provides information about an identifiable event. [13.3.1. Basic Principles]
  element listEvent {
    (OpenArabicPE_model.headLike*,
     (OpenArabicPE_event | OpenArabicPE_listEvent)+,
     (OpenArabicPE_relation | OpenArabicPE_listRelation)*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_listPerson =
  
  ## (list of persons) contains a list of descriptions, each of which provides information about an identifiable person or a group of people, for example the participants in a language interaction, or the people referred to in a historical source. [13.3.2. The Person Element 15.2. Contextual Information 2.4. The Profile Description 15.3.2. Declarable Elements]
  element listPerson {
    (OpenArabicPE_model.headLike*,
     (OpenArabicPE_model.personLike | OpenArabicPE_listPerson)+,
     (OpenArabicPE_relation | OpenArabicPE_listRelation)*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_listPlace =
  
  ## (list of places) contains a list of places, optionally followed by a list of relationships (other than containment) defined amongst them. [2.2.7. The Source Description 13.3.4. Places]
  element listPlace {
    (OpenArabicPE_model.headLike*,
     (OpenArabicPE_model.placeLike | OpenArabicPE_listPlace)+,
     (OpenArabicPE_relation | OpenArabicPE_listRelation)*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_location =
  
  ## defines the location of a place as a set of geographical coordinates, in terms of other named geo-political entities, or as an address. [13.3.4. Places]
  element location {
    (OpenArabicPE_model.labelLike
     | OpenArabicPE_model.placeNamePart
     | OpenArabicPE_model.offsetLike
     | OpenArabicPE_model.measureLike
     | OpenArabicPE_model.addressLike
     | OpenArabicPE_model.noteLike
     | OpenArabicPE_model.biblLike)*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    OpenArabicPE_att.datable.attributes,
    empty
  }
OpenArabicPE_org =
  
  ## (organization) provides information about an identifiable organization such as a business, a tribe, or any other grouping of people. [13.2.2. Organizational Names]
  element org {
    (OpenArabicPE_model.headLike*,
     (OpenArabicPE_model.pLike*
      | (OpenArabicPE_model.labelLike
         | OpenArabicPE_model.nameLike
         | OpenArabicPE_model.placeLike
         | OpenArabicPE_model.orgPart
         | OpenArabicPE_model.milestoneLike)*),
     (OpenArabicPE_model.noteLike | OpenArabicPE_model.biblLike)*,
     OpenArabicPE_model.personLike*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    
    ## specifies a primary role or classification for the organization.
    attribute role {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
OpenArabicPE_listRelation =
  
  ## provides information about relationships identified amongst people, places, and organizations, either informally as prose or as formally expressed relation links. [13.3.2.3. Personal Relationships]
  element listRelation {
    (OpenArabicPE_model.headLike*,
     (OpenArabicPE_model.pLike
      | (OpenArabicPE_relation | OpenArabicPE_listRelation)+)),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_person =
  
  ## provides information about an identifiable individual, for example a participant in a language interaction, or a person referred to in a historical source. [13.3.2. The Person Element 15.2.2. The Participant Description]
  element person {
    (OpenArabicPE_model.pLike+
     | (OpenArabicPE_model.personPart | OpenArabicPE_model.global)*),
    OpenArabicPE_att.global.attributes,
    
    ## specifies a primary role or classification for the person.
    attribute role {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## specifies the sex of the person.
    attribute sex {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## specifies an age group for the person.
    attribute age {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_personGrp =
  
  ## (personal group) describes a group of individuals treated as a single person for analytic purposes. [15.2.2. The Participant Description]
  element personGrp {
    (OpenArabicPE_model.pLike+
     | (OpenArabicPE_model.personPart | OpenArabicPE_model.global)*),
    OpenArabicPE_att.global.attributes,
    
    ## specifies the role of this group of participants in the interaction.
    attribute role {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## specifies the sex of the participant group.
    attribute sex {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## specifies the age group of the participants.
    attribute age {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## describes informally the size or approximate size of the group for example by means of a number and an indication of accuracy e.g. approx 200.
    attribute size {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
OpenArabicPE_place =
  
  ## contains data about a geographic location [13.3.4. Places]
  element place {
    (OpenArabicPE_model.headLike*,
     (OpenArabicPE_model.pLike*
      | (OpenArabicPE_model.labelLike
         | OpenArabicPE_model.placeStateLike
         | OpenArabicPE_model.eventLike)*),
     (OpenArabicPE_model.noteLike
      | OpenArabicPE_model.biblLike
      | OpenArabicPE_idno)*,
     (OpenArabicPE_model.placeLike | OpenArabicPE_listPlace)*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_relation =
  
  ## (relationship) describes any kind of relationship or linkage amongst a specified group of places, events, persons, objects or other items. [13.3.2.3. Personal Relationships]
  [
    sch:pattern [
      id =
        "tei_OpenArabicPE-relation-reforkeyorname-constraint-assert-7"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:relation"
        "\x{a}" ~
        "               "
        sch:assert [
          test = "@ref or @key or @name"
          "One of the attributes  'name', 'ref' or 'key' must be supplied"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
    sch:pattern [
      id = "tei_OpenArabicPE-relation-activemutual-constraint-report-13"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:relation"
        "\x{a}" ~
        "               "
        sch:report [
          test = "@active and @mutual"
          "Only one of the attributes\x{a}" ~
          "@active and @mutual may be supplied"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
    sch:pattern [
      id =
        "tei_OpenArabicPE-relation-activepassive-constraint-report-14"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:relation"
        "\x{a}" ~
        "               "
        sch:report [
          test = "@passive and not(@active)"
          "the attribute 'passive'\x{a}" ~
          "	may be supplied only if the attribute 'active' is\x{a}" ~
          "	supplied"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
  ]
  element relation {
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.canonical.attributes,
    OpenArabicPE_att.typed.attributes,
    
    ## supplies a name for the kind of relationship of which this is an instance.
    attribute name {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    (
     ## identifies the active participants in a non-mutual relationship, or all the participants in a mutual one.
     attribute active {
       list { xsd:anyURI+ }
     }?
     | 
       ## supplies a list of participants amongst all of whom the relationship holds equally.
       attribute mutual {
         list { xsd:anyURI+ }
       }?),
    
    ## identifies the passive participants in a non-mutual relationship.
    attribute passive {
      list { xsd:anyURI+ }
    }?,
    empty
  }
OpenArabicPE_trait =
  
  ## contains a description of some status or quality attributed to a person, place, or organization typically, but not necessarily, independent of the volition or action of the holder and usually not at some specific time or for a specific date range. [13.3.1. Basic Principles 13.3.2.1. Personal Characteristics]
  element trait {
    (OpenArabicPE_trait+
     | (OpenArabicPE_model.headLike*,
        OpenArabicPE_model.pLike+,
        (OpenArabicPE_model.noteLike | OpenArabicPE_model.biblLike)*)
     | (OpenArabicPE_model.labelLike
        | OpenArabicPE_model.noteLike
        | OpenArabicPE_model.biblLike)*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.datable.attributes,
    OpenArabicPE_att.naming.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_nym =
  
  ## (canonical name) contains the definition for a canonical name or name component of any kind. [13.3.5. Names and Nyms]
  element nym {
    (OpenArabicPE_model.entryPart*,
     OpenArabicPE_model.pLike*,
     OpenArabicPE_nym*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    
    ## points to constituent nyms
    attribute parts {
      list { xsd:anyURI+ }
    }?,
    empty
  }
OpenArabicPE_listNym =
  
  ## (list of canonical names) contains a list of nyms, that is, standardized names for any thing. [13.3.5. Names and Nyms]
  element listNym {
    (OpenArabicPE_model.headLike*,
     (OpenArabicPE_nym | OpenArabicPE_listNym)+,
     (OpenArabicPE_relation | OpenArabicPE_listRelation)*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_att.global.linking.attributes =
  OpenArabicPE_att.global.linking.attribute.corresp,
  OpenArabicPE_att.global.linking.attribute.next,
  OpenArabicPE_att.global.linking.attribute.prev
OpenArabicPE_att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current element in some way.
  attribute corresp {
    list { xsd:anyURI+ }
  }?
OpenArabicPE_att.global.linking.attribute.next =
  
  ## points to the next element of a virtual aggregate of which the current element is part.
  attribute next { xsd:anyURI }?
OpenArabicPE_att.global.linking.attribute.prev =
  
  ## (previous) points to the previous element of a virtual aggregate of which the current element is part.
  attribute prev { xsd:anyURI }?
OpenArabicPE_ab =
  
  ## (anonymous block) contains any arbitrary component-level unit of text, acting as an anonymous container for phrase or inter level elements analogous to, but without the semantic baggage of, a paragraph. [16.3. Blocks, Segments, and Anchors]
  element ab {
    OpenArabicPE_macro.paraContent
    >> sch:pattern [
         id =
           "tei_OpenArabicPE-ab-abstractModel-structure-p-constraint-report-15"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ab"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(ancestor::floatingText) and (ancestor::tei:p or ancestor::tei:ab)          and not(parent::tei:exemplum         |parent::tei:item         |parent::tei:note         |parent::tei:q         |parent::tei:quote         |parent::tei:remarks         |parent::tei:said         |parent::tei:sp         |parent::tei:stage         |parent::tei:cell         |parent::tei:figure)"
             "\x{a}" ~
             "        Abstract model violation: ab may not contain paragraphs or other ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "tei_OpenArabicPE-ab-abstractModel-structure-l-constraint-report-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ab"
           "\x{a}" ~
           "               "
           sch:report [
             test = "ancestor::tei:l or ancestor::tei:lg"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level divisions such as p or ab.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_seg =
  
  ## (arbitrary segment) represents any segmentation of text below the chunk level. [16.3. Blocks, Segments, and Anchors 6.2. Components of the Verse Line 7.2.5. Speech Contents]
  element seg {
    OpenArabicPE_macro.paraContent,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_table =
  
  ## contains text displayed in tabular form, in rows and columns. [14.1.1. TEI Tables]
  element table {
    ((OpenArabicPE_model.headLike | OpenArabicPE_model.global)*,
     ((OpenArabicPE_row, OpenArabicPE_model.global*)+
      | (OpenArabicPE_model.graphicLike, OpenArabicPE_model.global*)+),
     (OpenArabicPE_model.divBottom, OpenArabicPE_model.global*)*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    
    ## indicates the number of rows in the table.
    attribute rows { xsd:nonNegativeInteger }?,
    
    ## (columns) indicates the number of columns in each row of the table.
    attribute cols { xsd:nonNegativeInteger }?,
    empty
  }
OpenArabicPE_row =
  
  ## contains one row of a table. [14.1.1. TEI Tables]
  element row {
    OpenArabicPE_cell+,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.tableDecoration.attributes,
    empty
  }
OpenArabicPE_cell =
  
  ## contains one cell of a table. [14.1.1. TEI Tables]
  element cell {
    OpenArabicPE_macro.specialPara,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.tableDecoration.attributes,
    empty
  }
OpenArabicPE_figure =
  
  ## groups elements representing or containing graphic information such as an illustration, formula, or figure. [14.4. Specific Elements for Graphic Images]
  element figure {
    (OpenArabicPE_model.headLike
     | OpenArabicPE_model.common
     | OpenArabicPE_figDesc
     | OpenArabicPE_model.graphicLike
     | OpenArabicPE_model.global
     | OpenArabicPE_model.divBottom)*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.placement.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_figDesc =
  
  ## (description of figure) contains a brief prose description of the appearance or content of a graphic figure, for use when documenting an image without displaying it. [14.4. Specific Elements for Graphic Images]
  element figDesc {
    OpenArabicPE_macro.limitedContent,
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_att.global.facs.attributes =
  OpenArabicPE_att.global.facs.attribute.facs
OpenArabicPE_att.global.facs.attribute.facs =
  
  ## (facsimile) points to all or part of an image which corresponds with the content of the element.
  attribute facs {
    list { xsd:anyURI+ }
  }?
OpenArabicPE_att.global.change.attributes =
  OpenArabicPE_att.global.change.attribute.change
OpenArabicPE_att.global.change.attribute.change =
  
  ## points to one or more change elements documenting a state or revision campaign to which the element bearing this attribute and its children have been assigned by the encoder.
  attribute change {
    list { xsd:anyURI+ }
  }?
OpenArabicPE_facsimile =
  
  ## contains a representation of some written source in the form of a set of images rather than as transcribed or encoded text. [11.1. Digital Facsimiles]
  element facsimile {
    (OpenArabicPE_front?,
     (OpenArabicPE_model.graphicLike
      | OpenArabicPE_surface
      | OpenArabicPE_surfaceGrp)+,
     OpenArabicPE_back?),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_surface =
  
  ## defines a written surface as a two-dimensional coordinate space, optionally grouping one or more graphic representations of that space, zones of interest within that space, and transcriptions of the writing within them. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]
  element surface {
    ((OpenArabicPE_model.global
      | OpenArabicPE_model.labelLike
      | OpenArabicPE_model.graphicLike)*,
     ((OpenArabicPE_zone
       | OpenArabicPE_surface
       | OpenArabicPE_surfaceGrp),
      OpenArabicPE_model.global*)*),
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    
    ## describes the method by which this surface is or was connected to the main surface
    ## Sample values include: 1] glued; 2] pinned; 3] sewn
    attribute attachment {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates whether the surface is attached and folded in such a way as to provide two writing surfaces
    attribute flipping { xsd:boolean }?,
    empty
  }
OpenArabicPE_surfaceGrp =
  
  ## defines any kind of useful grouping of written surfaces, for example the recto and verso of a single leaf, which the encoder wishes to treat as a single unit. [11.1. Digital Facsimiles]
  element surfaceGrp {
    (OpenArabicPE_model.global
     | OpenArabicPE_surface
     | OpenArabicPE_surfaceGrp)+,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_zone =
  
  ## defines any two-dimensional area within a surface element. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]
  element zone {
    (text
     | OpenArabicPE_model.graphicLike
     | OpenArabicPE_model.global
     | OpenArabicPE_surface
     | OpenArabicPE_model.linePart)*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    
    ## indicates the amount by which this zone has been rotated clockwise, with respect to the normal orientation of the parent surface element as implied by the dimensions given in the msDesc element or by the coordinates of the surface itself. The orientation is expressed in arc degrees.
    [ a:defaultValue = "0" ]
    attribute rotate { xsd:nonNegativeInteger }?,
    empty
  }
OpenArabicPE_ex =
  
  ## (editorial expansion) contains a sequence of letters added by an editor or transcriber when expanding an abbreviation. [11.3.1.2. Abbreviation and Expansion]
  element ex {
    OpenArabicPE_macro.xtext, OpenArabicPE_att.global.attributes, empty
  }
OpenArabicPE_fw =
  
  ## (forme work) contains a running head (e.g. a header, footer), catchword, or similar material appearing on the current page. [11.6. Headers, Footers, and Similar Matter]
  element fw {
    OpenArabicPE_macro.phraseSeq,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.placement.attributes,
    
    ## classifies the material encoded according to some useful typology.
    ## Sample values include: 1] header; 2] footer; 3] pageNum(page number) ; 4] lineNum(line number) ; 5] sig(signature) ; 6] catch(catchword) 
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenArabicPE_am =
  
  ## (abbreviation marker) contains a sequence of letters or signs present in an abbreviation which are omitted or replaced in the expanded form of the abbreviation. [11.3.1.2. Abbreviation and Expansion]
  element am {
    (text
     | OpenArabicPE_model.gLike
     | OpenArabicPE_model.pPart.transcriptional)*,
    OpenArabicPE_att.global.attributes,
    OpenArabicPE_att.typed.attributes,
    empty
  }
OpenArabicPE_supplied =
  
  ## signifies text supplied by the transcriber or editor for any reason; for example because the original cannot be read due to physical damage, or because of an obvious omission by the author or scribe. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element supplied {
    OpenArabicPE_macro.paraContent,
    OpenArabicPE_att.global.attribute.xmlid,
    OpenArabicPE_att.global.attribute.n,
    OpenArabicPE_att.global.attribute.xmllang,
    OpenArabicPE_att.global.rendition.attribute.rend,
    OpenArabicPE_att.global.rendition.attribute.style,
    OpenArabicPE_att.global.rendition.attribute.rendition,
    OpenArabicPE_att.global.linking.attribute.corresp,
    OpenArabicPE_att.global.linking.attribute.next,
    OpenArabicPE_att.global.linking.attribute.prev,
    OpenArabicPE_att.global.facs.attribute.facs,
    OpenArabicPE_att.global.change.attribute.change,
    
    ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
    attribute resp {
      list { xsd:anyURI+ }
    },
    
    ## one or more words indicating why the text has had to be supplied, e.g. overbinding, faded-ink, lost-folio, omitted-in-original.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
OpenArabicPE_metamark =
  
  ## contains or describes any kind of graphic or written signal within a document the function of which is to determine how it should be read rather than forming part of the actual content of the document. [11.3.4.2. Metamarks]
  element metamark {
    OpenArabicPE_macro.specialPara,
    OpenArabicPE_att.placement.attributes,
    OpenArabicPE_att.global.attributes,
    
    ## describes the function (for example status, insertion, deletion, transposition) of the metamark.
    attribute function {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## identifies one or more elements to which the metamark applies.
    attribute target {
      list { xsd:anyURI+ }
    }?,
    empty
  }
OpenArabicPE_particDesc =
  
  ## (participation description) describes the identifiable speakers, voices, or other participants in any kind of text or other persons named or otherwise referred to in a text, edition, or metadata. [15.2. Contextual Information]
  element particDesc {
    (OpenArabicPE_model.pLike+
     | (OpenArabicPE_model.personLike
        | OpenArabicPE_listPerson
        | OpenArabicPE_listOrg)+),
    OpenArabicPE_att.global.attributes,
    empty
  }
OpenArabicPE_settingDesc =
  
  ## (setting description) describes the setting or settings within which a language interaction takes place, or other places otherwise referred to in a text, edition, or metadata. [15.2. Contextual Information 2.4. The Profile Description]
  element settingDesc {
    (OpenArabicPE_model.pLike+
     | (OpenArabicPE_model.placeLike | OpenArabicPE_listPlace)+),
    OpenArabicPE_att.global.attributes,
    empty
  }
start = OpenArabicPE_TEI | OpenArabicPE_teiCorpus
